
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuario
 * 
 */
export type Usuario = $Result.DefaultSelection<Prisma.$UsuarioPayload>
/**
 * Model Correos
 * 
 */
export type Correos = $Result.DefaultSelection<Prisma.$CorreosPayload>
/**
 * Model Favoritos
 * 
 */
export type Favoritos = $Result.DefaultSelection<Prisma.$FavoritosPayload>
/**
 * Model Bloqueados
 * 
 */
export type Bloqueados = $Result.DefaultSelection<Prisma.$BloqueadosPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **Usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.UsuarioDelegate<ExtArgs>;

  /**
   * `prisma.correos`: Exposes CRUD operations for the **Correos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Correos
    * const correos = await prisma.correos.findMany()
    * ```
    */
  get correos(): Prisma.CorreosDelegate<ExtArgs>;

  /**
   * `prisma.favoritos`: Exposes CRUD operations for the **Favoritos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favoritos
    * const favoritos = await prisma.favoritos.findMany()
    * ```
    */
  get favoritos(): Prisma.FavoritosDelegate<ExtArgs>;

  /**
   * `prisma.bloqueados`: Exposes CRUD operations for the **Bloqueados** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bloqueados
    * const bloqueados = await prisma.bloqueados.findMany()
    * ```
    */
  get bloqueados(): Prisma.BloqueadosDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.15.0
   * Query Engine version: 12e25d8d06f6ea5a0252864dd9a03b1bb51f3022
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuario: 'Usuario',
    Correos: 'Correos',
    Favoritos: 'Favoritos',
    Bloqueados: 'Bloqueados'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'usuario' | 'correos' | 'favoritos' | 'bloqueados'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      Usuario: {
        payload: Prisma.$UsuarioPayload<ExtArgs>
        fields: Prisma.UsuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuarioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuarioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findFirst: {
            args: Prisma.UsuarioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuarioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          findMany: {
            args: Prisma.UsuarioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          create: {
            args: Prisma.UsuarioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          createMany: {
            args: Prisma.UsuarioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsuarioCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>[]
          }
          delete: {
            args: Prisma.UsuarioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          update: {
            args: Prisma.UsuarioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          deleteMany: {
            args: Prisma.UsuarioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.UsuarioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.UsuarioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.UsuarioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuarioCountArgs<ExtArgs>,
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      Correos: {
        payload: Prisma.$CorreosPayload<ExtArgs>
        fields: Prisma.CorreosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CorreosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CorreosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreosPayload>
          }
          findFirst: {
            args: Prisma.CorreosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CorreosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreosPayload>
          }
          findMany: {
            args: Prisma.CorreosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreosPayload>[]
          }
          create: {
            args: Prisma.CorreosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreosPayload>
          }
          createMany: {
            args: Prisma.CorreosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CorreosCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreosPayload>[]
          }
          delete: {
            args: Prisma.CorreosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreosPayload>
          }
          update: {
            args: Prisma.CorreosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreosPayload>
          }
          deleteMany: {
            args: Prisma.CorreosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CorreosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CorreosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CorreosPayload>
          }
          aggregate: {
            args: Prisma.CorreosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCorreos>
          }
          groupBy: {
            args: Prisma.CorreosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CorreosGroupByOutputType>[]
          }
          count: {
            args: Prisma.CorreosCountArgs<ExtArgs>,
            result: $Utils.Optional<CorreosCountAggregateOutputType> | number
          }
        }
      }
      Favoritos: {
        payload: Prisma.$FavoritosPayload<ExtArgs>
        fields: Prisma.FavoritosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoritosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoritosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>
          }
          findFirst: {
            args: Prisma.FavoritosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoritosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>
          }
          findMany: {
            args: Prisma.FavoritosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>[]
          }
          create: {
            args: Prisma.FavoritosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>
          }
          createMany: {
            args: Prisma.FavoritosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FavoritosCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>[]
          }
          delete: {
            args: Prisma.FavoritosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>
          }
          update: {
            args: Prisma.FavoritosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>
          }
          deleteMany: {
            args: Prisma.FavoritosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.FavoritosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.FavoritosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritosPayload>
          }
          aggregate: {
            args: Prisma.FavoritosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFavoritos>
          }
          groupBy: {
            args: Prisma.FavoritosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<FavoritosGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoritosCountArgs<ExtArgs>,
            result: $Utils.Optional<FavoritosCountAggregateOutputType> | number
          }
        }
      }
      Bloqueados: {
        payload: Prisma.$BloqueadosPayload<ExtArgs>
        fields: Prisma.BloqueadosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BloqueadosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BloqueadosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BloqueadosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BloqueadosPayload>
          }
          findFirst: {
            args: Prisma.BloqueadosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BloqueadosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BloqueadosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BloqueadosPayload>
          }
          findMany: {
            args: Prisma.BloqueadosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BloqueadosPayload>[]
          }
          create: {
            args: Prisma.BloqueadosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BloqueadosPayload>
          }
          createMany: {
            args: Prisma.BloqueadosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BloqueadosCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BloqueadosPayload>[]
          }
          delete: {
            args: Prisma.BloqueadosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BloqueadosPayload>
          }
          update: {
            args: Prisma.BloqueadosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BloqueadosPayload>
          }
          deleteMany: {
            args: Prisma.BloqueadosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.BloqueadosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.BloqueadosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$BloqueadosPayload>
          }
          aggregate: {
            args: Prisma.BloqueadosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateBloqueados>
          }
          groupBy: {
            args: Prisma.BloqueadosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<BloqueadosGroupByOutputType>[]
          }
          count: {
            args: Prisma.BloqueadosCountArgs<ExtArgs>,
            result: $Utils.Optional<BloqueadosCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    correosEnviados: number
    correosRecibidos: number
    favoritos: number
    bloqueados: number
    bloqueadoPor: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    correosEnviados?: boolean | UsuarioCountOutputTypeCountCorreosEnviadosArgs
    correosRecibidos?: boolean | UsuarioCountOutputTypeCountCorreosRecibidosArgs
    favoritos?: boolean | UsuarioCountOutputTypeCountFavoritosArgs
    bloqueados?: boolean | UsuarioCountOutputTypeCountBloqueadosArgs
    bloqueadoPor?: boolean | UsuarioCountOutputTypeCountBloqueadoPorArgs
  }

  // Custom InputTypes
  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCorreosEnviadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CorreosWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountCorreosRecibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CorreosWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountFavoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritosWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountBloqueadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BloqueadosWhereInput
  }

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountBloqueadoPorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BloqueadosWhereInput
  }


  /**
   * Count Type CorreosCountOutputType
   */

  export type CorreosCountOutputType = {
    favoritos: number
  }

  export type CorreosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    favoritos?: boolean | CorreosCountOutputTypeCountFavoritosArgs
  }

  // Custom InputTypes
  /**
   * CorreosCountOutputType without action
   */
  export type CorreosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CorreosCountOutputType
     */
    select?: CorreosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CorreosCountOutputType without action
   */
  export type CorreosCountOutputTypeCountFavoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritosWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    correo: string | null
    clave: string | null
    descripcion: string | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    correo: string | null
    clave: string | null
    descripcion: string | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    nombre: number
    correo: number
    clave: number
    descripcion: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id?: true
  }

  export type UsuarioSumAggregateInputType = {
    id?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    nombre?: true
    correo?: true
    clave?: true
    descripcion?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    nombre?: true
    correo?: true
    clave?: true
    descripcion?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    nombre?: true
    correo?: true
    clave?: true
    descripcion?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuario to aggregate.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type UsuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuarioWhereInput
    orderBy?: UsuarioOrderByWithAggregationInput | UsuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: UsuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: number
    nombre: string
    correo: string
    clave: string
    descripcion: string | null
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends UsuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type UsuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    correo?: boolean
    clave?: boolean
    descripcion?: boolean
    correosEnviados?: boolean | Usuario$correosEnviadosArgs<ExtArgs>
    correosRecibidos?: boolean | Usuario$correosRecibidosArgs<ExtArgs>
    favoritos?: boolean | Usuario$favoritosArgs<ExtArgs>
    bloqueados?: boolean | Usuario$bloqueadosArgs<ExtArgs>
    bloqueadoPor?: boolean | Usuario$bloqueadoPorArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    correo?: boolean
    clave?: boolean
    descripcion?: boolean
  }, ExtArgs["result"]["usuario"]>

  export type UsuarioSelectScalar = {
    id?: boolean
    nombre?: boolean
    correo?: boolean
    clave?: boolean
    descripcion?: boolean
  }

  export type UsuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    correosEnviados?: boolean | Usuario$correosEnviadosArgs<ExtArgs>
    correosRecibidos?: boolean | Usuario$correosRecibidosArgs<ExtArgs>
    favoritos?: boolean | Usuario$favoritosArgs<ExtArgs>
    bloqueados?: boolean | Usuario$bloqueadosArgs<ExtArgs>
    bloqueadoPor?: boolean | Usuario$bloqueadoPorArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsuarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuario"
    objects: {
      correosEnviados: Prisma.$CorreosPayload<ExtArgs>[]
      correosRecibidos: Prisma.$CorreosPayload<ExtArgs>[]
      favoritos: Prisma.$FavoritosPayload<ExtArgs>[]
      bloqueados: Prisma.$BloqueadosPayload<ExtArgs>[]
      bloqueadoPor: Prisma.$BloqueadosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      correo: string
      clave: string
      descripcion: string | null
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }

  type UsuarioGetPayload<S extends boolean | null | undefined | UsuarioDefaultArgs> = $Result.GetResult<Prisma.$UsuarioPayload, S>

  type UsuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface UsuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuario'], meta: { name: 'Usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {UsuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UsuarioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioFindUniqueArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Usuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UsuarioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UsuarioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindFirstArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UsuarioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UsuarioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Usuario.
     * @param {UsuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
    **/
    create<T extends UsuarioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioCreateArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Usuarios.
     * @param {UsuarioCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends UsuarioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {UsuarioCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuario = await prisma.usuario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuarioWithIdOnly = await prisma.usuario.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends UsuarioCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Usuario.
     * @param {UsuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
    **/
    delete<T extends UsuarioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioDeleteArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Usuario.
     * @param {UsuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UsuarioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioUpdateArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UsuarioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsuarioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UsuarioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {UsuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
    **/
    upsert<T extends UsuarioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, UsuarioUpsertArgs<ExtArgs>>
    ): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuarioCountArgs>(
      args?: Subset<T, UsuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuarioGroupByArgs['orderBy'] }
        : { orderBy?: UsuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuario model
   */
  readonly fields: UsuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    correosEnviados<T extends Usuario$correosEnviadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$correosEnviadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreosPayload<ExtArgs>, T, 'findMany'> | Null>;

    correosRecibidos<T extends Usuario$correosRecibidosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$correosRecibidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreosPayload<ExtArgs>, T, 'findMany'> | Null>;

    favoritos<T extends Usuario$favoritosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$favoritosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, 'findMany'> | Null>;

    bloqueados<T extends Usuario$bloqueadosArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$bloqueadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BloqueadosPayload<ExtArgs>, T, 'findMany'> | Null>;

    bloqueadoPor<T extends Usuario$bloqueadoPorArgs<ExtArgs> = {}>(args?: Subset<T, Usuario$bloqueadoPorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BloqueadosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Usuario model
   */ 
  interface UsuarioFieldRefs {
    readonly id: FieldRef<"Usuario", 'Int'>
    readonly nombre: FieldRef<"Usuario", 'String'>
    readonly correo: FieldRef<"Usuario", 'String'>
    readonly clave: FieldRef<"Usuario", 'String'>
    readonly descripcion: FieldRef<"Usuario", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Usuario findUnique
   */
  export type UsuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findUniqueOrThrow
   */
  export type UsuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario findFirst
   */
  export type UsuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findFirstOrThrow
   */
  export type UsuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuario to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario findMany
   */
  export type UsuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuarioOrderByWithRelationInput | UsuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }

  /**
   * Usuario create
   */
  export type UsuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuario.
     */
    data: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
  }

  /**
   * Usuario createMany
   */
  export type UsuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario createManyAndReturn
   */
  export type UsuarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Usuarios.
     */
    data: UsuarioCreateManyInput | UsuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuario update
   */
  export type UsuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuario.
     */
    data: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
    /**
     * Choose, which Usuario to update.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario updateMany
   */
  export type UsuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuarioUpdateManyMutationInput, UsuarioUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario upsert
   */
  export type UsuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuario to update in case it exists.
     */
    where: UsuarioWhereUniqueInput
    /**
     * In case the Usuario found by the `where` argument doesn't exist, create a new Usuario with this data.
     */
    create: XOR<UsuarioCreateInput, UsuarioUncheckedCreateInput>
    /**
     * In case the Usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuarioUpdateInput, UsuarioUncheckedUpdateInput>
  }

  /**
   * Usuario delete
   */
  export type UsuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
    /**
     * Filter which Usuario to delete.
     */
    where: UsuarioWhereUniqueInput
  }

  /**
   * Usuario deleteMany
   */
  export type UsuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuarioWhereInput
  }

  /**
   * Usuario.correosEnviados
   */
  export type Usuario$correosEnviadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correos
     */
    select?: CorreosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreosInclude<ExtArgs> | null
    where?: CorreosWhereInput
    orderBy?: CorreosOrderByWithRelationInput | CorreosOrderByWithRelationInput[]
    cursor?: CorreosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CorreosScalarFieldEnum | CorreosScalarFieldEnum[]
  }

  /**
   * Usuario.correosRecibidos
   */
  export type Usuario$correosRecibidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correos
     */
    select?: CorreosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreosInclude<ExtArgs> | null
    where?: CorreosWhereInput
    orderBy?: CorreosOrderByWithRelationInput | CorreosOrderByWithRelationInput[]
    cursor?: CorreosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CorreosScalarFieldEnum | CorreosScalarFieldEnum[]
  }

  /**
   * Usuario.favoritos
   */
  export type Usuario$favoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    where?: FavoritosWhereInput
    orderBy?: FavoritosOrderByWithRelationInput | FavoritosOrderByWithRelationInput[]
    cursor?: FavoritosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * Usuario.bloqueados
   */
  export type Usuario$bloqueadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bloqueados
     */
    select?: BloqueadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BloqueadosInclude<ExtArgs> | null
    where?: BloqueadosWhereInput
    orderBy?: BloqueadosOrderByWithRelationInput | BloqueadosOrderByWithRelationInput[]
    cursor?: BloqueadosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BloqueadosScalarFieldEnum | BloqueadosScalarFieldEnum[]
  }

  /**
   * Usuario.bloqueadoPor
   */
  export type Usuario$bloqueadoPorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bloqueados
     */
    select?: BloqueadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BloqueadosInclude<ExtArgs> | null
    where?: BloqueadosWhereInput
    orderBy?: BloqueadosOrderByWithRelationInput | BloqueadosOrderByWithRelationInput[]
    cursor?: BloqueadosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BloqueadosScalarFieldEnum | BloqueadosScalarFieldEnum[]
  }

  /**
   * Usuario without action
   */
  export type UsuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuario
     */
    select?: UsuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuarioInclude<ExtArgs> | null
  }


  /**
   * Model Correos
   */

  export type AggregateCorreos = {
    _count: CorreosCountAggregateOutputType | null
    _avg: CorreosAvgAggregateOutputType | null
    _sum: CorreosSumAggregateOutputType | null
    _min: CorreosMinAggregateOutputType | null
    _max: CorreosMaxAggregateOutputType | null
  }

  export type CorreosAvgAggregateOutputType = {
    id: number | null
    remitente_id: number | null
    destinatario_id: number | null
  }

  export type CorreosSumAggregateOutputType = {
    id: number | null
    remitente_id: number | null
    destinatario_id: number | null
  }

  export type CorreosMinAggregateOutputType = {
    id: number | null
    remitente_id: number | null
    destinatario_id: number | null
    asunto: string | null
    cuerpo: string | null
    fecha: Date | null
  }

  export type CorreosMaxAggregateOutputType = {
    id: number | null
    remitente_id: number | null
    destinatario_id: number | null
    asunto: string | null
    cuerpo: string | null
    fecha: Date | null
  }

  export type CorreosCountAggregateOutputType = {
    id: number
    remitente_id: number
    destinatario_id: number
    asunto: number
    cuerpo: number
    fecha: number
    _all: number
  }


  export type CorreosAvgAggregateInputType = {
    id?: true
    remitente_id?: true
    destinatario_id?: true
  }

  export type CorreosSumAggregateInputType = {
    id?: true
    remitente_id?: true
    destinatario_id?: true
  }

  export type CorreosMinAggregateInputType = {
    id?: true
    remitente_id?: true
    destinatario_id?: true
    asunto?: true
    cuerpo?: true
    fecha?: true
  }

  export type CorreosMaxAggregateInputType = {
    id?: true
    remitente_id?: true
    destinatario_id?: true
    asunto?: true
    cuerpo?: true
    fecha?: true
  }

  export type CorreosCountAggregateInputType = {
    id?: true
    remitente_id?: true
    destinatario_id?: true
    asunto?: true
    cuerpo?: true
    fecha?: true
    _all?: true
  }

  export type CorreosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Correos to aggregate.
     */
    where?: CorreosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correos to fetch.
     */
    orderBy?: CorreosOrderByWithRelationInput | CorreosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CorreosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Correos
    **/
    _count?: true | CorreosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CorreosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CorreosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CorreosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CorreosMaxAggregateInputType
  }

  export type GetCorreosAggregateType<T extends CorreosAggregateArgs> = {
        [P in keyof T & keyof AggregateCorreos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCorreos[P]>
      : GetScalarType<T[P], AggregateCorreos[P]>
  }




  export type CorreosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CorreosWhereInput
    orderBy?: CorreosOrderByWithAggregationInput | CorreosOrderByWithAggregationInput[]
    by: CorreosScalarFieldEnum[] | CorreosScalarFieldEnum
    having?: CorreosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CorreosCountAggregateInputType | true
    _avg?: CorreosAvgAggregateInputType
    _sum?: CorreosSumAggregateInputType
    _min?: CorreosMinAggregateInputType
    _max?: CorreosMaxAggregateInputType
  }

  export type CorreosGroupByOutputType = {
    id: number
    remitente_id: number
    destinatario_id: number
    asunto: string | null
    cuerpo: string | null
    fecha: Date
    _count: CorreosCountAggregateOutputType | null
    _avg: CorreosAvgAggregateOutputType | null
    _sum: CorreosSumAggregateOutputType | null
    _min: CorreosMinAggregateOutputType | null
    _max: CorreosMaxAggregateOutputType | null
  }

  type GetCorreosGroupByPayload<T extends CorreosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CorreosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CorreosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CorreosGroupByOutputType[P]>
            : GetScalarType<T[P], CorreosGroupByOutputType[P]>
        }
      >
    >


  export type CorreosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    remitente_id?: boolean
    destinatario_id?: boolean
    asunto?: boolean
    cuerpo?: boolean
    fecha?: boolean
    remitente?: boolean | UsuarioDefaultArgs<ExtArgs>
    destinatario?: boolean | UsuarioDefaultArgs<ExtArgs>
    favoritos?: boolean | Correos$favoritosArgs<ExtArgs>
    _count?: boolean | CorreosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["correos"]>

  export type CorreosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    remitente_id?: boolean
    destinatario_id?: boolean
    asunto?: boolean
    cuerpo?: boolean
    fecha?: boolean
    remitente?: boolean | UsuarioDefaultArgs<ExtArgs>
    destinatario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["correos"]>

  export type CorreosSelectScalar = {
    id?: boolean
    remitente_id?: boolean
    destinatario_id?: boolean
    asunto?: boolean
    cuerpo?: boolean
    fecha?: boolean
  }

  export type CorreosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | UsuarioDefaultArgs<ExtArgs>
    destinatario?: boolean | UsuarioDefaultArgs<ExtArgs>
    favoritos?: boolean | Correos$favoritosArgs<ExtArgs>
    _count?: boolean | CorreosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CorreosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    remitente?: boolean | UsuarioDefaultArgs<ExtArgs>
    destinatario?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $CorreosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Correos"
    objects: {
      remitente: Prisma.$UsuarioPayload<ExtArgs>
      destinatario: Prisma.$UsuarioPayload<ExtArgs>
      favoritos: Prisma.$FavoritosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      remitente_id: number
      destinatario_id: number
      asunto: string | null
      cuerpo: string | null
      fecha: Date
    }, ExtArgs["result"]["correos"]>
    composites: {}
  }

  type CorreosGetPayload<S extends boolean | null | undefined | CorreosDefaultArgs> = $Result.GetResult<Prisma.$CorreosPayload, S>

  type CorreosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CorreosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CorreosCountAggregateInputType | true
    }

  export interface CorreosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Correos'], meta: { name: 'Correos' } }
    /**
     * Find zero or one Correos that matches the filter.
     * @param {CorreosFindUniqueArgs} args - Arguments to find a Correos
     * @example
     * // Get one Correos
     * const correos = await prisma.correos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CorreosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CorreosFindUniqueArgs<ExtArgs>>
    ): Prisma__CorreosClient<$Result.GetResult<Prisma.$CorreosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Correos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CorreosFindUniqueOrThrowArgs} args - Arguments to find a Correos
     * @example
     * // Get one Correos
     * const correos = await prisma.correos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CorreosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CorreosClient<$Result.GetResult<Prisma.$CorreosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Correos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreosFindFirstArgs} args - Arguments to find a Correos
     * @example
     * // Get one Correos
     * const correos = await prisma.correos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CorreosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreosFindFirstArgs<ExtArgs>>
    ): Prisma__CorreosClient<$Result.GetResult<Prisma.$CorreosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Correos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreosFindFirstOrThrowArgs} args - Arguments to find a Correos
     * @example
     * // Get one Correos
     * const correos = await prisma.correos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CorreosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CorreosClient<$Result.GetResult<Prisma.$CorreosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Correos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Correos
     * const correos = await prisma.correos.findMany()
     * 
     * // Get first 10 Correos
     * const correos = await prisma.correos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const correosWithIdOnly = await prisma.correos.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CorreosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Correos.
     * @param {CorreosCreateArgs} args - Arguments to create a Correos.
     * @example
     * // Create one Correos
     * const Correos = await prisma.correos.create({
     *   data: {
     *     // ... data to create a Correos
     *   }
     * })
     * 
    **/
    create<T extends CorreosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CorreosCreateArgs<ExtArgs>>
    ): Prisma__CorreosClient<$Result.GetResult<Prisma.$CorreosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Correos.
     * @param {CorreosCreateManyArgs} args - Arguments to create many Correos.
     * @example
     * // Create many Correos
     * const correos = await prisma.correos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends CorreosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Correos and returns the data saved in the database.
     * @param {CorreosCreateManyAndReturnArgs} args - Arguments to create many Correos.
     * @example
     * // Create many Correos
     * const correos = await prisma.correos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Correos and only return the `id`
     * const correosWithIdOnly = await prisma.correos.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends CorreosCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreosCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CorreosPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Correos.
     * @param {CorreosDeleteArgs} args - Arguments to delete one Correos.
     * @example
     * // Delete one Correos
     * const Correos = await prisma.correos.delete({
     *   where: {
     *     // ... filter to delete one Correos
     *   }
     * })
     * 
    **/
    delete<T extends CorreosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CorreosDeleteArgs<ExtArgs>>
    ): Prisma__CorreosClient<$Result.GetResult<Prisma.$CorreosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Correos.
     * @param {CorreosUpdateArgs} args - Arguments to update one Correos.
     * @example
     * // Update one Correos
     * const correos = await prisma.correos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CorreosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CorreosUpdateArgs<ExtArgs>>
    ): Prisma__CorreosClient<$Result.GetResult<Prisma.$CorreosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Correos.
     * @param {CorreosDeleteManyArgs} args - Arguments to filter Correos to delete.
     * @example
     * // Delete a few Correos
     * const { count } = await prisma.correos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CorreosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CorreosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Correos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Correos
     * const correos = await prisma.correos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CorreosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CorreosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Correos.
     * @param {CorreosUpsertArgs} args - Arguments to update or create a Correos.
     * @example
     * // Update or create a Correos
     * const correos = await prisma.correos.upsert({
     *   create: {
     *     // ... data to create a Correos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Correos we want to update
     *   }
     * })
    **/
    upsert<T extends CorreosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CorreosUpsertArgs<ExtArgs>>
    ): Prisma__CorreosClient<$Result.GetResult<Prisma.$CorreosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Correos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreosCountArgs} args - Arguments to filter Correos to count.
     * @example
     * // Count the number of Correos
     * const count = await prisma.correos.count({
     *   where: {
     *     // ... the filter for the Correos we want to count
     *   }
     * })
    **/
    count<T extends CorreosCountArgs>(
      args?: Subset<T, CorreosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CorreosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Correos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CorreosAggregateArgs>(args: Subset<T, CorreosAggregateArgs>): Prisma.PrismaPromise<GetCorreosAggregateType<T>>

    /**
     * Group by Correos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CorreosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CorreosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CorreosGroupByArgs['orderBy'] }
        : { orderBy?: CorreosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CorreosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCorreosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Correos model
   */
  readonly fields: CorreosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Correos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CorreosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    remitente<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    destinatario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    favoritos<T extends Correos$favoritosArgs<ExtArgs> = {}>(args?: Subset<T, Correos$favoritosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Correos model
   */ 
  interface CorreosFieldRefs {
    readonly id: FieldRef<"Correos", 'Int'>
    readonly remitente_id: FieldRef<"Correos", 'Int'>
    readonly destinatario_id: FieldRef<"Correos", 'Int'>
    readonly asunto: FieldRef<"Correos", 'String'>
    readonly cuerpo: FieldRef<"Correos", 'String'>
    readonly fecha: FieldRef<"Correos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Correos findUnique
   */
  export type CorreosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correos
     */
    select?: CorreosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreosInclude<ExtArgs> | null
    /**
     * Filter, which Correos to fetch.
     */
    where: CorreosWhereUniqueInput
  }

  /**
   * Correos findUniqueOrThrow
   */
  export type CorreosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correos
     */
    select?: CorreosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreosInclude<ExtArgs> | null
    /**
     * Filter, which Correos to fetch.
     */
    where: CorreosWhereUniqueInput
  }

  /**
   * Correos findFirst
   */
  export type CorreosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correos
     */
    select?: CorreosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreosInclude<ExtArgs> | null
    /**
     * Filter, which Correos to fetch.
     */
    where?: CorreosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correos to fetch.
     */
    orderBy?: CorreosOrderByWithRelationInput | CorreosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Correos.
     */
    cursor?: CorreosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Correos.
     */
    distinct?: CorreosScalarFieldEnum | CorreosScalarFieldEnum[]
  }

  /**
   * Correos findFirstOrThrow
   */
  export type CorreosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correos
     */
    select?: CorreosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreosInclude<ExtArgs> | null
    /**
     * Filter, which Correos to fetch.
     */
    where?: CorreosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correos to fetch.
     */
    orderBy?: CorreosOrderByWithRelationInput | CorreosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Correos.
     */
    cursor?: CorreosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Correos.
     */
    distinct?: CorreosScalarFieldEnum | CorreosScalarFieldEnum[]
  }

  /**
   * Correos findMany
   */
  export type CorreosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correos
     */
    select?: CorreosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreosInclude<ExtArgs> | null
    /**
     * Filter, which Correos to fetch.
     */
    where?: CorreosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Correos to fetch.
     */
    orderBy?: CorreosOrderByWithRelationInput | CorreosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Correos.
     */
    cursor?: CorreosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Correos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Correos.
     */
    skip?: number
    distinct?: CorreosScalarFieldEnum | CorreosScalarFieldEnum[]
  }

  /**
   * Correos create
   */
  export type CorreosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correos
     */
    select?: CorreosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreosInclude<ExtArgs> | null
    /**
     * The data needed to create a Correos.
     */
    data: XOR<CorreosCreateInput, CorreosUncheckedCreateInput>
  }

  /**
   * Correos createMany
   */
  export type CorreosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Correos.
     */
    data: CorreosCreateManyInput | CorreosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Correos createManyAndReturn
   */
  export type CorreosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correos
     */
    select?: CorreosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Correos.
     */
    data: CorreosCreateManyInput | CorreosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Correos update
   */
  export type CorreosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correos
     */
    select?: CorreosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreosInclude<ExtArgs> | null
    /**
     * The data needed to update a Correos.
     */
    data: XOR<CorreosUpdateInput, CorreosUncheckedUpdateInput>
    /**
     * Choose, which Correos to update.
     */
    where: CorreosWhereUniqueInput
  }

  /**
   * Correos updateMany
   */
  export type CorreosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Correos.
     */
    data: XOR<CorreosUpdateManyMutationInput, CorreosUncheckedUpdateManyInput>
    /**
     * Filter which Correos to update
     */
    where?: CorreosWhereInput
  }

  /**
   * Correos upsert
   */
  export type CorreosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correos
     */
    select?: CorreosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreosInclude<ExtArgs> | null
    /**
     * The filter to search for the Correos to update in case it exists.
     */
    where: CorreosWhereUniqueInput
    /**
     * In case the Correos found by the `where` argument doesn't exist, create a new Correos with this data.
     */
    create: XOR<CorreosCreateInput, CorreosUncheckedCreateInput>
    /**
     * In case the Correos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CorreosUpdateInput, CorreosUncheckedUpdateInput>
  }

  /**
   * Correos delete
   */
  export type CorreosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correos
     */
    select?: CorreosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreosInclude<ExtArgs> | null
    /**
     * Filter which Correos to delete.
     */
    where: CorreosWhereUniqueInput
  }

  /**
   * Correos deleteMany
   */
  export type CorreosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Correos to delete
     */
    where?: CorreosWhereInput
  }

  /**
   * Correos.favoritos
   */
  export type Correos$favoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    where?: FavoritosWhereInput
    orderBy?: FavoritosOrderByWithRelationInput | FavoritosOrderByWithRelationInput[]
    cursor?: FavoritosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * Correos without action
   */
  export type CorreosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Correos
     */
    select?: CorreosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CorreosInclude<ExtArgs> | null
  }


  /**
   * Model Favoritos
   */

  export type AggregateFavoritos = {
    _count: FavoritosCountAggregateOutputType | null
    _avg: FavoritosAvgAggregateOutputType | null
    _sum: FavoritosSumAggregateOutputType | null
    _min: FavoritosMinAggregateOutputType | null
    _max: FavoritosMaxAggregateOutputType | null
  }

  export type FavoritosAvgAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    correo_id: number | null
  }

  export type FavoritosSumAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    correo_id: number | null
  }

  export type FavoritosMinAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    correo_id: number | null
  }

  export type FavoritosMaxAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    correo_id: number | null
  }

  export type FavoritosCountAggregateOutputType = {
    id: number
    usuario_id: number
    correo_id: number
    _all: number
  }


  export type FavoritosAvgAggregateInputType = {
    id?: true
    usuario_id?: true
    correo_id?: true
  }

  export type FavoritosSumAggregateInputType = {
    id?: true
    usuario_id?: true
    correo_id?: true
  }

  export type FavoritosMinAggregateInputType = {
    id?: true
    usuario_id?: true
    correo_id?: true
  }

  export type FavoritosMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    correo_id?: true
  }

  export type FavoritosCountAggregateInputType = {
    id?: true
    usuario_id?: true
    correo_id?: true
    _all?: true
  }

  export type FavoritosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favoritos to aggregate.
     */
    where?: FavoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritosOrderByWithRelationInput | FavoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Favoritos
    **/
    _count?: true | FavoritosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FavoritosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FavoritosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoritosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoritosMaxAggregateInputType
  }

  export type GetFavoritosAggregateType<T extends FavoritosAggregateArgs> = {
        [P in keyof T & keyof AggregateFavoritos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavoritos[P]>
      : GetScalarType<T[P], AggregateFavoritos[P]>
  }




  export type FavoritosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoritosWhereInput
    orderBy?: FavoritosOrderByWithAggregationInput | FavoritosOrderByWithAggregationInput[]
    by: FavoritosScalarFieldEnum[] | FavoritosScalarFieldEnum
    having?: FavoritosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoritosCountAggregateInputType | true
    _avg?: FavoritosAvgAggregateInputType
    _sum?: FavoritosSumAggregateInputType
    _min?: FavoritosMinAggregateInputType
    _max?: FavoritosMaxAggregateInputType
  }

  export type FavoritosGroupByOutputType = {
    id: number
    usuario_id: number
    correo_id: number
    _count: FavoritosCountAggregateOutputType | null
    _avg: FavoritosAvgAggregateOutputType | null
    _sum: FavoritosSumAggregateOutputType | null
    _min: FavoritosMinAggregateOutputType | null
    _max: FavoritosMaxAggregateOutputType | null
  }

  type GetFavoritosGroupByPayload<T extends FavoritosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoritosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoritosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoritosGroupByOutputType[P]>
            : GetScalarType<T[P], FavoritosGroupByOutputType[P]>
        }
      >
    >


  export type FavoritosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    correo_id?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    correo?: boolean | CorreosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoritos"]>

  export type FavoritosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    correo_id?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    correo?: boolean | CorreosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["favoritos"]>

  export type FavoritosSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    correo_id?: boolean
  }

  export type FavoritosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    correo?: boolean | CorreosDefaultArgs<ExtArgs>
  }
  export type FavoritosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    correo?: boolean | CorreosDefaultArgs<ExtArgs>
  }

  export type $FavoritosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Favoritos"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      correo: Prisma.$CorreosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuario_id: number
      correo_id: number
    }, ExtArgs["result"]["favoritos"]>
    composites: {}
  }

  type FavoritosGetPayload<S extends boolean | null | undefined | FavoritosDefaultArgs> = $Result.GetResult<Prisma.$FavoritosPayload, S>

  type FavoritosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FavoritosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FavoritosCountAggregateInputType | true
    }

  export interface FavoritosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Favoritos'], meta: { name: 'Favoritos' } }
    /**
     * Find zero or one Favoritos that matches the filter.
     * @param {FavoritosFindUniqueArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FavoritosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, FavoritosFindUniqueArgs<ExtArgs>>
    ): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Favoritos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FavoritosFindUniqueOrThrowArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FavoritosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoritosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Favoritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosFindFirstArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FavoritosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoritosFindFirstArgs<ExtArgs>>
    ): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Favoritos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosFindFirstOrThrowArgs} args - Arguments to find a Favoritos
     * @example
     * // Get one Favoritos
     * const favoritos = await prisma.favoritos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FavoritosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoritosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Favoritos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favoritos
     * const favoritos = await prisma.favoritos.findMany()
     * 
     * // Get first 10 Favoritos
     * const favoritos = await prisma.favoritos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoritosWithIdOnly = await prisma.favoritos.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FavoritosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoritosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Favoritos.
     * @param {FavoritosCreateArgs} args - Arguments to create a Favoritos.
     * @example
     * // Create one Favoritos
     * const Favoritos = await prisma.favoritos.create({
     *   data: {
     *     // ... data to create a Favoritos
     *   }
     * })
     * 
    **/
    create<T extends FavoritosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, FavoritosCreateArgs<ExtArgs>>
    ): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Favoritos.
     * @param {FavoritosCreateManyArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favoritos = await prisma.favoritos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends FavoritosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoritosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Favoritos and returns the data saved in the database.
     * @param {FavoritosCreateManyAndReturnArgs} args - Arguments to create many Favoritos.
     * @example
     * // Create many Favoritos
     * const favoritos = await prisma.favoritos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Favoritos and only return the `id`
     * const favoritosWithIdOnly = await prisma.favoritos.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends FavoritosCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoritosCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Favoritos.
     * @param {FavoritosDeleteArgs} args - Arguments to delete one Favoritos.
     * @example
     * // Delete one Favoritos
     * const Favoritos = await prisma.favoritos.delete({
     *   where: {
     *     // ... filter to delete one Favoritos
     *   }
     * })
     * 
    **/
    delete<T extends FavoritosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, FavoritosDeleteArgs<ExtArgs>>
    ): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Favoritos.
     * @param {FavoritosUpdateArgs} args - Arguments to update one Favoritos.
     * @example
     * // Update one Favoritos
     * const favoritos = await prisma.favoritos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FavoritosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, FavoritosUpdateArgs<ExtArgs>>
    ): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Favoritos.
     * @param {FavoritosDeleteManyArgs} args - Arguments to filter Favoritos to delete.
     * @example
     * // Delete a few Favoritos
     * const { count } = await prisma.favoritos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FavoritosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoritosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favoritos
     * const favoritos = await prisma.favoritos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FavoritosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, FavoritosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Favoritos.
     * @param {FavoritosUpsertArgs} args - Arguments to update or create a Favoritos.
     * @example
     * // Update or create a Favoritos
     * const favoritos = await prisma.favoritos.upsert({
     *   create: {
     *     // ... data to create a Favoritos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favoritos we want to update
     *   }
     * })
    **/
    upsert<T extends FavoritosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, FavoritosUpsertArgs<ExtArgs>>
    ): Prisma__FavoritosClient<$Result.GetResult<Prisma.$FavoritosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosCountArgs} args - Arguments to filter Favoritos to count.
     * @example
     * // Count the number of Favoritos
     * const count = await prisma.favoritos.count({
     *   where: {
     *     // ... the filter for the Favoritos we want to count
     *   }
     * })
    **/
    count<T extends FavoritosCountArgs>(
      args?: Subset<T, FavoritosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoritosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoritosAggregateArgs>(args: Subset<T, FavoritosAggregateArgs>): Prisma.PrismaPromise<GetFavoritosAggregateType<T>>

    /**
     * Group by Favoritos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoritosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoritosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoritosGroupByArgs['orderBy'] }
        : { orderBy?: FavoritosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoritosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoritosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Favoritos model
   */
  readonly fields: FavoritosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Favoritos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoritosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    correo<T extends CorreosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CorreosDefaultArgs<ExtArgs>>): Prisma__CorreosClient<$Result.GetResult<Prisma.$CorreosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Favoritos model
   */ 
  interface FavoritosFieldRefs {
    readonly id: FieldRef<"Favoritos", 'Int'>
    readonly usuario_id: FieldRef<"Favoritos", 'Int'>
    readonly correo_id: FieldRef<"Favoritos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Favoritos findUnique
   */
  export type FavoritosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * Filter, which Favoritos to fetch.
     */
    where: FavoritosWhereUniqueInput
  }

  /**
   * Favoritos findUniqueOrThrow
   */
  export type FavoritosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * Filter, which Favoritos to fetch.
     */
    where: FavoritosWhereUniqueInput
  }

  /**
   * Favoritos findFirst
   */
  export type FavoritosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * Filter, which Favoritos to fetch.
     */
    where?: FavoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritosOrderByWithRelationInput | FavoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favoritos.
     */
    cursor?: FavoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favoritos.
     */
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * Favoritos findFirstOrThrow
   */
  export type FavoritosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * Filter, which Favoritos to fetch.
     */
    where?: FavoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritosOrderByWithRelationInput | FavoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favoritos.
     */
    cursor?: FavoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favoritos.
     */
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * Favoritos findMany
   */
  export type FavoritosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * Filter, which Favoritos to fetch.
     */
    where?: FavoritosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favoritos to fetch.
     */
    orderBy?: FavoritosOrderByWithRelationInput | FavoritosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Favoritos.
     */
    cursor?: FavoritosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favoritos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favoritos.
     */
    skip?: number
    distinct?: FavoritosScalarFieldEnum | FavoritosScalarFieldEnum[]
  }

  /**
   * Favoritos create
   */
  export type FavoritosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * The data needed to create a Favoritos.
     */
    data: XOR<FavoritosCreateInput, FavoritosUncheckedCreateInput>
  }

  /**
   * Favoritos createMany
   */
  export type FavoritosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Favoritos.
     */
    data: FavoritosCreateManyInput | FavoritosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Favoritos createManyAndReturn
   */
  export type FavoritosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Favoritos.
     */
    data: FavoritosCreateManyInput | FavoritosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Favoritos update
   */
  export type FavoritosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * The data needed to update a Favoritos.
     */
    data: XOR<FavoritosUpdateInput, FavoritosUncheckedUpdateInput>
    /**
     * Choose, which Favoritos to update.
     */
    where: FavoritosWhereUniqueInput
  }

  /**
   * Favoritos updateMany
   */
  export type FavoritosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Favoritos.
     */
    data: XOR<FavoritosUpdateManyMutationInput, FavoritosUncheckedUpdateManyInput>
    /**
     * Filter which Favoritos to update
     */
    where?: FavoritosWhereInput
  }

  /**
   * Favoritos upsert
   */
  export type FavoritosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * The filter to search for the Favoritos to update in case it exists.
     */
    where: FavoritosWhereUniqueInput
    /**
     * In case the Favoritos found by the `where` argument doesn't exist, create a new Favoritos with this data.
     */
    create: XOR<FavoritosCreateInput, FavoritosUncheckedCreateInput>
    /**
     * In case the Favoritos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoritosUpdateInput, FavoritosUncheckedUpdateInput>
  }

  /**
   * Favoritos delete
   */
  export type FavoritosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
    /**
     * Filter which Favoritos to delete.
     */
    where: FavoritosWhereUniqueInput
  }

  /**
   * Favoritos deleteMany
   */
  export type FavoritosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favoritos to delete
     */
    where?: FavoritosWhereInput
  }

  /**
   * Favoritos without action
   */
  export type FavoritosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favoritos
     */
    select?: FavoritosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FavoritosInclude<ExtArgs> | null
  }


  /**
   * Model Bloqueados
   */

  export type AggregateBloqueados = {
    _count: BloqueadosCountAggregateOutputType | null
    _avg: BloqueadosAvgAggregateOutputType | null
    _sum: BloqueadosSumAggregateOutputType | null
    _min: BloqueadosMinAggregateOutputType | null
    _max: BloqueadosMaxAggregateOutputType | null
  }

  export type BloqueadosAvgAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    usuario_bloqueado_id: number | null
  }

  export type BloqueadosSumAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    usuario_bloqueado_id: number | null
  }

  export type BloqueadosMinAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    usuario_bloqueado_id: number | null
  }

  export type BloqueadosMaxAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    usuario_bloqueado_id: number | null
  }

  export type BloqueadosCountAggregateOutputType = {
    id: number
    usuario_id: number
    usuario_bloqueado_id: number
    _all: number
  }


  export type BloqueadosAvgAggregateInputType = {
    id?: true
    usuario_id?: true
    usuario_bloqueado_id?: true
  }

  export type BloqueadosSumAggregateInputType = {
    id?: true
    usuario_id?: true
    usuario_bloqueado_id?: true
  }

  export type BloqueadosMinAggregateInputType = {
    id?: true
    usuario_id?: true
    usuario_bloqueado_id?: true
  }

  export type BloqueadosMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    usuario_bloqueado_id?: true
  }

  export type BloqueadosCountAggregateInputType = {
    id?: true
    usuario_id?: true
    usuario_bloqueado_id?: true
    _all?: true
  }

  export type BloqueadosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bloqueados to aggregate.
     */
    where?: BloqueadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bloqueados to fetch.
     */
    orderBy?: BloqueadosOrderByWithRelationInput | BloqueadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BloqueadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bloqueados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bloqueados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Bloqueados
    **/
    _count?: true | BloqueadosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BloqueadosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BloqueadosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BloqueadosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BloqueadosMaxAggregateInputType
  }

  export type GetBloqueadosAggregateType<T extends BloqueadosAggregateArgs> = {
        [P in keyof T & keyof AggregateBloqueados]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBloqueados[P]>
      : GetScalarType<T[P], AggregateBloqueados[P]>
  }




  export type BloqueadosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BloqueadosWhereInput
    orderBy?: BloqueadosOrderByWithAggregationInput | BloqueadosOrderByWithAggregationInput[]
    by: BloqueadosScalarFieldEnum[] | BloqueadosScalarFieldEnum
    having?: BloqueadosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BloqueadosCountAggregateInputType | true
    _avg?: BloqueadosAvgAggregateInputType
    _sum?: BloqueadosSumAggregateInputType
    _min?: BloqueadosMinAggregateInputType
    _max?: BloqueadosMaxAggregateInputType
  }

  export type BloqueadosGroupByOutputType = {
    id: number
    usuario_id: number
    usuario_bloqueado_id: number
    _count: BloqueadosCountAggregateOutputType | null
    _avg: BloqueadosAvgAggregateOutputType | null
    _sum: BloqueadosSumAggregateOutputType | null
    _min: BloqueadosMinAggregateOutputType | null
    _max: BloqueadosMaxAggregateOutputType | null
  }

  type GetBloqueadosGroupByPayload<T extends BloqueadosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BloqueadosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BloqueadosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BloqueadosGroupByOutputType[P]>
            : GetScalarType<T[P], BloqueadosGroupByOutputType[P]>
        }
      >
    >


  export type BloqueadosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    usuario_bloqueado_id?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    usuarioBloqueado?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bloqueados"]>

  export type BloqueadosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    usuario_bloqueado_id?: boolean
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    usuarioBloqueado?: boolean | UsuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bloqueados"]>

  export type BloqueadosSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    usuario_bloqueado_id?: boolean
  }

  export type BloqueadosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    usuarioBloqueado?: boolean | UsuarioDefaultArgs<ExtArgs>
  }
  export type BloqueadosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UsuarioDefaultArgs<ExtArgs>
    usuarioBloqueado?: boolean | UsuarioDefaultArgs<ExtArgs>
  }

  export type $BloqueadosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Bloqueados"
    objects: {
      usuario: Prisma.$UsuarioPayload<ExtArgs>
      usuarioBloqueado: Prisma.$UsuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuario_id: number
      usuario_bloqueado_id: number
    }, ExtArgs["result"]["bloqueados"]>
    composites: {}
  }

  type BloqueadosGetPayload<S extends boolean | null | undefined | BloqueadosDefaultArgs> = $Result.GetResult<Prisma.$BloqueadosPayload, S>

  type BloqueadosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BloqueadosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BloqueadosCountAggregateInputType | true
    }

  export interface BloqueadosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Bloqueados'], meta: { name: 'Bloqueados' } }
    /**
     * Find zero or one Bloqueados that matches the filter.
     * @param {BloqueadosFindUniqueArgs} args - Arguments to find a Bloqueados
     * @example
     * // Get one Bloqueados
     * const bloqueados = await prisma.bloqueados.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends BloqueadosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, BloqueadosFindUniqueArgs<ExtArgs>>
    ): Prisma__BloqueadosClient<$Result.GetResult<Prisma.$BloqueadosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Bloqueados that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BloqueadosFindUniqueOrThrowArgs} args - Arguments to find a Bloqueados
     * @example
     * // Get one Bloqueados
     * const bloqueados = await prisma.bloqueados.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends BloqueadosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, BloqueadosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__BloqueadosClient<$Result.GetResult<Prisma.$BloqueadosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Bloqueados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BloqueadosFindFirstArgs} args - Arguments to find a Bloqueados
     * @example
     * // Get one Bloqueados
     * const bloqueados = await prisma.bloqueados.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends BloqueadosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, BloqueadosFindFirstArgs<ExtArgs>>
    ): Prisma__BloqueadosClient<$Result.GetResult<Prisma.$BloqueadosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Bloqueados that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BloqueadosFindFirstOrThrowArgs} args - Arguments to find a Bloqueados
     * @example
     * // Get one Bloqueados
     * const bloqueados = await prisma.bloqueados.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends BloqueadosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, BloqueadosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__BloqueadosClient<$Result.GetResult<Prisma.$BloqueadosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Bloqueados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BloqueadosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bloqueados
     * const bloqueados = await prisma.bloqueados.findMany()
     * 
     * // Get first 10 Bloqueados
     * const bloqueados = await prisma.bloqueados.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bloqueadosWithIdOnly = await prisma.bloqueados.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends BloqueadosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, BloqueadosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BloqueadosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Bloqueados.
     * @param {BloqueadosCreateArgs} args - Arguments to create a Bloqueados.
     * @example
     * // Create one Bloqueados
     * const Bloqueados = await prisma.bloqueados.create({
     *   data: {
     *     // ... data to create a Bloqueados
     *   }
     * })
     * 
    **/
    create<T extends BloqueadosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, BloqueadosCreateArgs<ExtArgs>>
    ): Prisma__BloqueadosClient<$Result.GetResult<Prisma.$BloqueadosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Bloqueados.
     * @param {BloqueadosCreateManyArgs} args - Arguments to create many Bloqueados.
     * @example
     * // Create many Bloqueados
     * const bloqueados = await prisma.bloqueados.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends BloqueadosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, BloqueadosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Bloqueados and returns the data saved in the database.
     * @param {BloqueadosCreateManyAndReturnArgs} args - Arguments to create many Bloqueados.
     * @example
     * // Create many Bloqueados
     * const bloqueados = await prisma.bloqueados.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Bloqueados and only return the `id`
     * const bloqueadosWithIdOnly = await prisma.bloqueados.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends BloqueadosCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, BloqueadosCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BloqueadosPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Bloqueados.
     * @param {BloqueadosDeleteArgs} args - Arguments to delete one Bloqueados.
     * @example
     * // Delete one Bloqueados
     * const Bloqueados = await prisma.bloqueados.delete({
     *   where: {
     *     // ... filter to delete one Bloqueados
     *   }
     * })
     * 
    **/
    delete<T extends BloqueadosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, BloqueadosDeleteArgs<ExtArgs>>
    ): Prisma__BloqueadosClient<$Result.GetResult<Prisma.$BloqueadosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Bloqueados.
     * @param {BloqueadosUpdateArgs} args - Arguments to update one Bloqueados.
     * @example
     * // Update one Bloqueados
     * const bloqueados = await prisma.bloqueados.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends BloqueadosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, BloqueadosUpdateArgs<ExtArgs>>
    ): Prisma__BloqueadosClient<$Result.GetResult<Prisma.$BloqueadosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Bloqueados.
     * @param {BloqueadosDeleteManyArgs} args - Arguments to filter Bloqueados to delete.
     * @example
     * // Delete a few Bloqueados
     * const { count } = await prisma.bloqueados.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends BloqueadosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, BloqueadosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bloqueados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BloqueadosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bloqueados
     * const bloqueados = await prisma.bloqueados.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends BloqueadosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, BloqueadosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Bloqueados.
     * @param {BloqueadosUpsertArgs} args - Arguments to update or create a Bloqueados.
     * @example
     * // Update or create a Bloqueados
     * const bloqueados = await prisma.bloqueados.upsert({
     *   create: {
     *     // ... data to create a Bloqueados
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Bloqueados we want to update
     *   }
     * })
    **/
    upsert<T extends BloqueadosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, BloqueadosUpsertArgs<ExtArgs>>
    ): Prisma__BloqueadosClient<$Result.GetResult<Prisma.$BloqueadosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Bloqueados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BloqueadosCountArgs} args - Arguments to filter Bloqueados to count.
     * @example
     * // Count the number of Bloqueados
     * const count = await prisma.bloqueados.count({
     *   where: {
     *     // ... the filter for the Bloqueados we want to count
     *   }
     * })
    **/
    count<T extends BloqueadosCountArgs>(
      args?: Subset<T, BloqueadosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BloqueadosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Bloqueados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BloqueadosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BloqueadosAggregateArgs>(args: Subset<T, BloqueadosAggregateArgs>): Prisma.PrismaPromise<GetBloqueadosAggregateType<T>>

    /**
     * Group by Bloqueados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BloqueadosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BloqueadosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BloqueadosGroupByArgs['orderBy'] }
        : { orderBy?: BloqueadosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BloqueadosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBloqueadosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Bloqueados model
   */
  readonly fields: BloqueadosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Bloqueados.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BloqueadosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuario<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    usuarioBloqueado<T extends UsuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuarioDefaultArgs<ExtArgs>>): Prisma__UsuarioClient<$Result.GetResult<Prisma.$UsuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Bloqueados model
   */ 
  interface BloqueadosFieldRefs {
    readonly id: FieldRef<"Bloqueados", 'Int'>
    readonly usuario_id: FieldRef<"Bloqueados", 'Int'>
    readonly usuario_bloqueado_id: FieldRef<"Bloqueados", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Bloqueados findUnique
   */
  export type BloqueadosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bloqueados
     */
    select?: BloqueadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BloqueadosInclude<ExtArgs> | null
    /**
     * Filter, which Bloqueados to fetch.
     */
    where: BloqueadosWhereUniqueInput
  }

  /**
   * Bloqueados findUniqueOrThrow
   */
  export type BloqueadosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bloqueados
     */
    select?: BloqueadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BloqueadosInclude<ExtArgs> | null
    /**
     * Filter, which Bloqueados to fetch.
     */
    where: BloqueadosWhereUniqueInput
  }

  /**
   * Bloqueados findFirst
   */
  export type BloqueadosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bloqueados
     */
    select?: BloqueadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BloqueadosInclude<ExtArgs> | null
    /**
     * Filter, which Bloqueados to fetch.
     */
    where?: BloqueadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bloqueados to fetch.
     */
    orderBy?: BloqueadosOrderByWithRelationInput | BloqueadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bloqueados.
     */
    cursor?: BloqueadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bloqueados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bloqueados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bloqueados.
     */
    distinct?: BloqueadosScalarFieldEnum | BloqueadosScalarFieldEnum[]
  }

  /**
   * Bloqueados findFirstOrThrow
   */
  export type BloqueadosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bloqueados
     */
    select?: BloqueadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BloqueadosInclude<ExtArgs> | null
    /**
     * Filter, which Bloqueados to fetch.
     */
    where?: BloqueadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bloqueados to fetch.
     */
    orderBy?: BloqueadosOrderByWithRelationInput | BloqueadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Bloqueados.
     */
    cursor?: BloqueadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bloqueados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bloqueados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Bloqueados.
     */
    distinct?: BloqueadosScalarFieldEnum | BloqueadosScalarFieldEnum[]
  }

  /**
   * Bloqueados findMany
   */
  export type BloqueadosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bloqueados
     */
    select?: BloqueadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BloqueadosInclude<ExtArgs> | null
    /**
     * Filter, which Bloqueados to fetch.
     */
    where?: BloqueadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Bloqueados to fetch.
     */
    orderBy?: BloqueadosOrderByWithRelationInput | BloqueadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Bloqueados.
     */
    cursor?: BloqueadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Bloqueados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Bloqueados.
     */
    skip?: number
    distinct?: BloqueadosScalarFieldEnum | BloqueadosScalarFieldEnum[]
  }

  /**
   * Bloqueados create
   */
  export type BloqueadosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bloqueados
     */
    select?: BloqueadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BloqueadosInclude<ExtArgs> | null
    /**
     * The data needed to create a Bloqueados.
     */
    data: XOR<BloqueadosCreateInput, BloqueadosUncheckedCreateInput>
  }

  /**
   * Bloqueados createMany
   */
  export type BloqueadosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Bloqueados.
     */
    data: BloqueadosCreateManyInput | BloqueadosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Bloqueados createManyAndReturn
   */
  export type BloqueadosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bloqueados
     */
    select?: BloqueadosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Bloqueados.
     */
    data: BloqueadosCreateManyInput | BloqueadosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BloqueadosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Bloqueados update
   */
  export type BloqueadosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bloqueados
     */
    select?: BloqueadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BloqueadosInclude<ExtArgs> | null
    /**
     * The data needed to update a Bloqueados.
     */
    data: XOR<BloqueadosUpdateInput, BloqueadosUncheckedUpdateInput>
    /**
     * Choose, which Bloqueados to update.
     */
    where: BloqueadosWhereUniqueInput
  }

  /**
   * Bloqueados updateMany
   */
  export type BloqueadosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Bloqueados.
     */
    data: XOR<BloqueadosUpdateManyMutationInput, BloqueadosUncheckedUpdateManyInput>
    /**
     * Filter which Bloqueados to update
     */
    where?: BloqueadosWhereInput
  }

  /**
   * Bloqueados upsert
   */
  export type BloqueadosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bloqueados
     */
    select?: BloqueadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BloqueadosInclude<ExtArgs> | null
    /**
     * The filter to search for the Bloqueados to update in case it exists.
     */
    where: BloqueadosWhereUniqueInput
    /**
     * In case the Bloqueados found by the `where` argument doesn't exist, create a new Bloqueados with this data.
     */
    create: XOR<BloqueadosCreateInput, BloqueadosUncheckedCreateInput>
    /**
     * In case the Bloqueados was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BloqueadosUpdateInput, BloqueadosUncheckedUpdateInput>
  }

  /**
   * Bloqueados delete
   */
  export type BloqueadosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bloqueados
     */
    select?: BloqueadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BloqueadosInclude<ExtArgs> | null
    /**
     * Filter which Bloqueados to delete.
     */
    where: BloqueadosWhereUniqueInput
  }

  /**
   * Bloqueados deleteMany
   */
  export type BloqueadosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Bloqueados to delete
     */
    where?: BloqueadosWhereInput
  }

  /**
   * Bloqueados without action
   */
  export type BloqueadosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bloqueados
     */
    select?: BloqueadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BloqueadosInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    correo: 'correo',
    clave: 'clave',
    descripcion: 'descripcion'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const CorreosScalarFieldEnum: {
    id: 'id',
    remitente_id: 'remitente_id',
    destinatario_id: 'destinatario_id',
    asunto: 'asunto',
    cuerpo: 'cuerpo',
    fecha: 'fecha'
  };

  export type CorreosScalarFieldEnum = (typeof CorreosScalarFieldEnum)[keyof typeof CorreosScalarFieldEnum]


  export const FavoritosScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    correo_id: 'correo_id'
  };

  export type FavoritosScalarFieldEnum = (typeof FavoritosScalarFieldEnum)[keyof typeof FavoritosScalarFieldEnum]


  export const BloqueadosScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    usuario_bloqueado_id: 'usuario_bloqueado_id'
  };

  export type BloqueadosScalarFieldEnum = (typeof BloqueadosScalarFieldEnum)[keyof typeof BloqueadosScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UsuarioWhereInput = {
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    id?: IntFilter<"Usuario"> | number
    nombre?: StringFilter<"Usuario"> | string
    correo?: StringFilter<"Usuario"> | string
    clave?: StringFilter<"Usuario"> | string
    descripcion?: StringNullableFilter<"Usuario"> | string | null
    correosEnviados?: CorreosListRelationFilter
    correosRecibidos?: CorreosListRelationFilter
    favoritos?: FavoritosListRelationFilter
    bloqueados?: BloqueadosListRelationFilter
    bloqueadoPor?: BloqueadosListRelationFilter
  }

  export type UsuarioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    clave?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    correosEnviados?: CorreosOrderByRelationAggregateInput
    correosRecibidos?: CorreosOrderByRelationAggregateInput
    favoritos?: FavoritosOrderByRelationAggregateInput
    bloqueados?: BloqueadosOrderByRelationAggregateInput
    bloqueadoPor?: BloqueadosOrderByRelationAggregateInput
  }

  export type UsuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    correo?: string
    AND?: UsuarioWhereInput | UsuarioWhereInput[]
    OR?: UsuarioWhereInput[]
    NOT?: UsuarioWhereInput | UsuarioWhereInput[]
    nombre?: StringFilter<"Usuario"> | string
    clave?: StringFilter<"Usuario"> | string
    descripcion?: StringNullableFilter<"Usuario"> | string | null
    correosEnviados?: CorreosListRelationFilter
    correosRecibidos?: CorreosListRelationFilter
    favoritos?: FavoritosListRelationFilter
    bloqueados?: BloqueadosListRelationFilter
    bloqueadoPor?: BloqueadosListRelationFilter
  }, "id" | "correo">

  export type UsuarioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    clave?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    _count?: UsuarioCountOrderByAggregateInput
    _avg?: UsuarioAvgOrderByAggregateInput
    _max?: UsuarioMaxOrderByAggregateInput
    _min?: UsuarioMinOrderByAggregateInput
    _sum?: UsuarioSumOrderByAggregateInput
  }

  export type UsuarioScalarWhereWithAggregatesInput = {
    AND?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    OR?: UsuarioScalarWhereWithAggregatesInput[]
    NOT?: UsuarioScalarWhereWithAggregatesInput | UsuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Usuario"> | number
    nombre?: StringWithAggregatesFilter<"Usuario"> | string
    correo?: StringWithAggregatesFilter<"Usuario"> | string
    clave?: StringWithAggregatesFilter<"Usuario"> | string
    descripcion?: StringNullableWithAggregatesFilter<"Usuario"> | string | null
  }

  export type CorreosWhereInput = {
    AND?: CorreosWhereInput | CorreosWhereInput[]
    OR?: CorreosWhereInput[]
    NOT?: CorreosWhereInput | CorreosWhereInput[]
    id?: IntFilter<"Correos"> | number
    remitente_id?: IntFilter<"Correos"> | number
    destinatario_id?: IntFilter<"Correos"> | number
    asunto?: StringNullableFilter<"Correos"> | string | null
    cuerpo?: StringNullableFilter<"Correos"> | string | null
    fecha?: DateTimeFilter<"Correos"> | Date | string
    remitente?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    destinatario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    favoritos?: FavoritosListRelationFilter
  }

  export type CorreosOrderByWithRelationInput = {
    id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
    asunto?: SortOrderInput | SortOrder
    cuerpo?: SortOrderInput | SortOrder
    fecha?: SortOrder
    remitente?: UsuarioOrderByWithRelationInput
    destinatario?: UsuarioOrderByWithRelationInput
    favoritos?: FavoritosOrderByRelationAggregateInput
  }

  export type CorreosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CorreosWhereInput | CorreosWhereInput[]
    OR?: CorreosWhereInput[]
    NOT?: CorreosWhereInput | CorreosWhereInput[]
    remitente_id?: IntFilter<"Correos"> | number
    destinatario_id?: IntFilter<"Correos"> | number
    asunto?: StringNullableFilter<"Correos"> | string | null
    cuerpo?: StringNullableFilter<"Correos"> | string | null
    fecha?: DateTimeFilter<"Correos"> | Date | string
    remitente?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    destinatario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    favoritos?: FavoritosListRelationFilter
  }, "id">

  export type CorreosOrderByWithAggregationInput = {
    id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
    asunto?: SortOrderInput | SortOrder
    cuerpo?: SortOrderInput | SortOrder
    fecha?: SortOrder
    _count?: CorreosCountOrderByAggregateInput
    _avg?: CorreosAvgOrderByAggregateInput
    _max?: CorreosMaxOrderByAggregateInput
    _min?: CorreosMinOrderByAggregateInput
    _sum?: CorreosSumOrderByAggregateInput
  }

  export type CorreosScalarWhereWithAggregatesInput = {
    AND?: CorreosScalarWhereWithAggregatesInput | CorreosScalarWhereWithAggregatesInput[]
    OR?: CorreosScalarWhereWithAggregatesInput[]
    NOT?: CorreosScalarWhereWithAggregatesInput | CorreosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Correos"> | number
    remitente_id?: IntWithAggregatesFilter<"Correos"> | number
    destinatario_id?: IntWithAggregatesFilter<"Correos"> | number
    asunto?: StringNullableWithAggregatesFilter<"Correos"> | string | null
    cuerpo?: StringNullableWithAggregatesFilter<"Correos"> | string | null
    fecha?: DateTimeWithAggregatesFilter<"Correos"> | Date | string
  }

  export type FavoritosWhereInput = {
    AND?: FavoritosWhereInput | FavoritosWhereInput[]
    OR?: FavoritosWhereInput[]
    NOT?: FavoritosWhereInput | FavoritosWhereInput[]
    id?: IntFilter<"Favoritos"> | number
    usuario_id?: IntFilter<"Favoritos"> | number
    correo_id?: IntFilter<"Favoritos"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    correo?: XOR<CorreosRelationFilter, CorreosWhereInput>
  }

  export type FavoritosOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    correo_id?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    correo?: CorreosOrderByWithRelationInput
  }

  export type FavoritosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    usuario_id_correo_id?: FavoritosUsuario_idCorreo_idCompoundUniqueInput
    AND?: FavoritosWhereInput | FavoritosWhereInput[]
    OR?: FavoritosWhereInput[]
    NOT?: FavoritosWhereInput | FavoritosWhereInput[]
    usuario_id?: IntFilter<"Favoritos"> | number
    correo_id?: IntFilter<"Favoritos"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    correo?: XOR<CorreosRelationFilter, CorreosWhereInput>
  }, "id" | "usuario_id_correo_id">

  export type FavoritosOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    correo_id?: SortOrder
    _count?: FavoritosCountOrderByAggregateInput
    _avg?: FavoritosAvgOrderByAggregateInput
    _max?: FavoritosMaxOrderByAggregateInput
    _min?: FavoritosMinOrderByAggregateInput
    _sum?: FavoritosSumOrderByAggregateInput
  }

  export type FavoritosScalarWhereWithAggregatesInput = {
    AND?: FavoritosScalarWhereWithAggregatesInput | FavoritosScalarWhereWithAggregatesInput[]
    OR?: FavoritosScalarWhereWithAggregatesInput[]
    NOT?: FavoritosScalarWhereWithAggregatesInput | FavoritosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Favoritos"> | number
    usuario_id?: IntWithAggregatesFilter<"Favoritos"> | number
    correo_id?: IntWithAggregatesFilter<"Favoritos"> | number
  }

  export type BloqueadosWhereInput = {
    AND?: BloqueadosWhereInput | BloqueadosWhereInput[]
    OR?: BloqueadosWhereInput[]
    NOT?: BloqueadosWhereInput | BloqueadosWhereInput[]
    id?: IntFilter<"Bloqueados"> | number
    usuario_id?: IntFilter<"Bloqueados"> | number
    usuario_bloqueado_id?: IntFilter<"Bloqueados"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    usuarioBloqueado?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }

  export type BloqueadosOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    usuario_bloqueado_id?: SortOrder
    usuario?: UsuarioOrderByWithRelationInput
    usuarioBloqueado?: UsuarioOrderByWithRelationInput
  }

  export type BloqueadosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    usuario_id_usuario_bloqueado_id?: BloqueadosUsuario_idUsuario_bloqueado_idCompoundUniqueInput
    AND?: BloqueadosWhereInput | BloqueadosWhereInput[]
    OR?: BloqueadosWhereInput[]
    NOT?: BloqueadosWhereInput | BloqueadosWhereInput[]
    usuario_id?: IntFilter<"Bloqueados"> | number
    usuario_bloqueado_id?: IntFilter<"Bloqueados"> | number
    usuario?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
    usuarioBloqueado?: XOR<UsuarioRelationFilter, UsuarioWhereInput>
  }, "id" | "usuario_id_usuario_bloqueado_id">

  export type BloqueadosOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    usuario_bloqueado_id?: SortOrder
    _count?: BloqueadosCountOrderByAggregateInput
    _avg?: BloqueadosAvgOrderByAggregateInput
    _max?: BloqueadosMaxOrderByAggregateInput
    _min?: BloqueadosMinOrderByAggregateInput
    _sum?: BloqueadosSumOrderByAggregateInput
  }

  export type BloqueadosScalarWhereWithAggregatesInput = {
    AND?: BloqueadosScalarWhereWithAggregatesInput | BloqueadosScalarWhereWithAggregatesInput[]
    OR?: BloqueadosScalarWhereWithAggregatesInput[]
    NOT?: BloqueadosScalarWhereWithAggregatesInput | BloqueadosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Bloqueados"> | number
    usuario_id?: IntWithAggregatesFilter<"Bloqueados"> | number
    usuario_bloqueado_id?: IntWithAggregatesFilter<"Bloqueados"> | number
  }

  export type UsuarioCreateInput = {
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    correosEnviados?: CorreosCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreosCreateNestedManyWithoutDestinatarioInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
    bloqueados?: BloqueadosCreateNestedManyWithoutUsuarioInput
    bloqueadoPor?: BloqueadosCreateNestedManyWithoutUsuarioBloqueadoInput
  }

  export type UsuarioUncheckedCreateInput = {
    id?: number
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    correosEnviados?: CorreosUncheckedCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreosUncheckedCreateNestedManyWithoutDestinatarioInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
    bloqueados?: BloqueadosUncheckedCreateNestedManyWithoutUsuarioInput
    bloqueadoPor?: BloqueadosUncheckedCreateNestedManyWithoutUsuarioBloqueadoInput
  }

  export type UsuarioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    correosEnviados?: CorreosUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreosUpdateManyWithoutDestinatarioNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
    bloqueados?: BloqueadosUpdateManyWithoutUsuarioNestedInput
    bloqueadoPor?: BloqueadosUpdateManyWithoutUsuarioBloqueadoNestedInput
  }

  export type UsuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    correosEnviados?: CorreosUncheckedUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreosUncheckedUpdateManyWithoutDestinatarioNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
    bloqueados?: BloqueadosUncheckedUpdateManyWithoutUsuarioNestedInput
    bloqueadoPor?: BloqueadosUncheckedUpdateManyWithoutUsuarioBloqueadoNestedInput
  }

  export type UsuarioCreateManyInput = {
    id?: number
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
  }

  export type UsuarioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CorreosCreateInput = {
    asunto?: string | null
    cuerpo?: string | null
    fecha?: Date | string
    remitente: UsuarioCreateNestedOneWithoutCorreosEnviadosInput
    destinatario: UsuarioCreateNestedOneWithoutCorreosRecibidosInput
    favoritos?: FavoritosCreateNestedManyWithoutCorreoInput
  }

  export type CorreosUncheckedCreateInput = {
    id?: number
    remitente_id: number
    destinatario_id: number
    asunto?: string | null
    cuerpo?: string | null
    fecha?: Date | string
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutCorreoInput
  }

  export type CorreosUpdateInput = {
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    remitente?: UsuarioUpdateOneRequiredWithoutCorreosEnviadosNestedInput
    destinatario?: UsuarioUpdateOneRequiredWithoutCorreosRecibidosNestedInput
    favoritos?: FavoritosUpdateManyWithoutCorreoNestedInput
  }

  export type CorreosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitente_id?: IntFieldUpdateOperationsInput | number
    destinatario_id?: IntFieldUpdateOperationsInput | number
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    favoritos?: FavoritosUncheckedUpdateManyWithoutCorreoNestedInput
  }

  export type CorreosCreateManyInput = {
    id?: number
    remitente_id: number
    destinatario_id: number
    asunto?: string | null
    cuerpo?: string | null
    fecha?: Date | string
  }

  export type CorreosUpdateManyMutationInput = {
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CorreosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitente_id?: IntFieldUpdateOperationsInput | number
    destinatario_id?: IntFieldUpdateOperationsInput | number
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoritosCreateInput = {
    usuario: UsuarioCreateNestedOneWithoutFavoritosInput
    correo: CorreosCreateNestedOneWithoutFavoritosInput
  }

  export type FavoritosUncheckedCreateInput = {
    id?: number
    usuario_id: number
    correo_id: number
  }

  export type FavoritosUpdateInput = {
    usuario?: UsuarioUpdateOneRequiredWithoutFavoritosNestedInput
    correo?: CorreosUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type FavoritosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    correo_id?: IntFieldUpdateOperationsInput | number
  }

  export type FavoritosCreateManyInput = {
    id?: number
    usuario_id: number
    correo_id: number
  }

  export type FavoritosUpdateManyMutationInput = {

  }

  export type FavoritosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    correo_id?: IntFieldUpdateOperationsInput | number
  }

  export type BloqueadosCreateInput = {
    usuario: UsuarioCreateNestedOneWithoutBloqueadosInput
    usuarioBloqueado: UsuarioCreateNestedOneWithoutBloqueadoPorInput
  }

  export type BloqueadosUncheckedCreateInput = {
    id?: number
    usuario_id: number
    usuario_bloqueado_id: number
  }

  export type BloqueadosUpdateInput = {
    usuario?: UsuarioUpdateOneRequiredWithoutBloqueadosNestedInput
    usuarioBloqueado?: UsuarioUpdateOneRequiredWithoutBloqueadoPorNestedInput
  }

  export type BloqueadosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    usuario_bloqueado_id?: IntFieldUpdateOperationsInput | number
  }

  export type BloqueadosCreateManyInput = {
    id?: number
    usuario_id: number
    usuario_bloqueado_id: number
  }

  export type BloqueadosUpdateManyMutationInput = {

  }

  export type BloqueadosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
    usuario_bloqueado_id?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type CorreosListRelationFilter = {
    every?: CorreosWhereInput
    some?: CorreosWhereInput
    none?: CorreosWhereInput
  }

  export type FavoritosListRelationFilter = {
    every?: FavoritosWhereInput
    some?: FavoritosWhereInput
    none?: FavoritosWhereInput
  }

  export type BloqueadosListRelationFilter = {
    every?: BloqueadosWhereInput
    some?: BloqueadosWhereInput
    none?: BloqueadosWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CorreosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FavoritosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BloqueadosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuarioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    clave?: SortOrder
    descripcion?: SortOrder
  }

  export type UsuarioAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UsuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    clave?: SortOrder
    descripcion?: SortOrder
  }

  export type UsuarioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    clave?: SortOrder
    descripcion?: SortOrder
  }

  export type UsuarioSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UsuarioRelationFilter = {
    is?: UsuarioWhereInput
    isNot?: UsuarioWhereInput
  }

  export type CorreosCountOrderByAggregateInput = {
    id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
    asunto?: SortOrder
    cuerpo?: SortOrder
    fecha?: SortOrder
  }

  export type CorreosAvgOrderByAggregateInput = {
    id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
  }

  export type CorreosMaxOrderByAggregateInput = {
    id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
    asunto?: SortOrder
    cuerpo?: SortOrder
    fecha?: SortOrder
  }

  export type CorreosMinOrderByAggregateInput = {
    id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
    asunto?: SortOrder
    cuerpo?: SortOrder
    fecha?: SortOrder
  }

  export type CorreosSumOrderByAggregateInput = {
    id?: SortOrder
    remitente_id?: SortOrder
    destinatario_id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type CorreosRelationFilter = {
    is?: CorreosWhereInput
    isNot?: CorreosWhereInput
  }

  export type FavoritosUsuario_idCorreo_idCompoundUniqueInput = {
    usuario_id: number
    correo_id: number
  }

  export type FavoritosCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    correo_id?: SortOrder
  }

  export type FavoritosAvgOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    correo_id?: SortOrder
  }

  export type FavoritosMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    correo_id?: SortOrder
  }

  export type FavoritosMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    correo_id?: SortOrder
  }

  export type FavoritosSumOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    correo_id?: SortOrder
  }

  export type BloqueadosUsuario_idUsuario_bloqueado_idCompoundUniqueInput = {
    usuario_id: number
    usuario_bloqueado_id: number
  }

  export type BloqueadosCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    usuario_bloqueado_id?: SortOrder
  }

  export type BloqueadosAvgOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    usuario_bloqueado_id?: SortOrder
  }

  export type BloqueadosMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    usuario_bloqueado_id?: SortOrder
  }

  export type BloqueadosMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    usuario_bloqueado_id?: SortOrder
  }

  export type BloqueadosSumOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    usuario_bloqueado_id?: SortOrder
  }

  export type CorreosCreateNestedManyWithoutRemitenteInput = {
    create?: XOR<CorreosCreateWithoutRemitenteInput, CorreosUncheckedCreateWithoutRemitenteInput> | CorreosCreateWithoutRemitenteInput[] | CorreosUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: CorreosCreateOrConnectWithoutRemitenteInput | CorreosCreateOrConnectWithoutRemitenteInput[]
    createMany?: CorreosCreateManyRemitenteInputEnvelope
    connect?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
  }

  export type CorreosCreateNestedManyWithoutDestinatarioInput = {
    create?: XOR<CorreosCreateWithoutDestinatarioInput, CorreosUncheckedCreateWithoutDestinatarioInput> | CorreosCreateWithoutDestinatarioInput[] | CorreosUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: CorreosCreateOrConnectWithoutDestinatarioInput | CorreosCreateOrConnectWithoutDestinatarioInput[]
    createMany?: CorreosCreateManyDestinatarioInputEnvelope
    connect?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
  }

  export type FavoritosCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<FavoritosCreateWithoutUsuarioInput, FavoritosUncheckedCreateWithoutUsuarioInput> | FavoritosCreateWithoutUsuarioInput[] | FavoritosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutUsuarioInput | FavoritosCreateOrConnectWithoutUsuarioInput[]
    createMany?: FavoritosCreateManyUsuarioInputEnvelope
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
  }

  export type BloqueadosCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<BloqueadosCreateWithoutUsuarioInput, BloqueadosUncheckedCreateWithoutUsuarioInput> | BloqueadosCreateWithoutUsuarioInput[] | BloqueadosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: BloqueadosCreateOrConnectWithoutUsuarioInput | BloqueadosCreateOrConnectWithoutUsuarioInput[]
    createMany?: BloqueadosCreateManyUsuarioInputEnvelope
    connect?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
  }

  export type BloqueadosCreateNestedManyWithoutUsuarioBloqueadoInput = {
    create?: XOR<BloqueadosCreateWithoutUsuarioBloqueadoInput, BloqueadosUncheckedCreateWithoutUsuarioBloqueadoInput> | BloqueadosCreateWithoutUsuarioBloqueadoInput[] | BloqueadosUncheckedCreateWithoutUsuarioBloqueadoInput[]
    connectOrCreate?: BloqueadosCreateOrConnectWithoutUsuarioBloqueadoInput | BloqueadosCreateOrConnectWithoutUsuarioBloqueadoInput[]
    createMany?: BloqueadosCreateManyUsuarioBloqueadoInputEnvelope
    connect?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
  }

  export type CorreosUncheckedCreateNestedManyWithoutRemitenteInput = {
    create?: XOR<CorreosCreateWithoutRemitenteInput, CorreosUncheckedCreateWithoutRemitenteInput> | CorreosCreateWithoutRemitenteInput[] | CorreosUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: CorreosCreateOrConnectWithoutRemitenteInput | CorreosCreateOrConnectWithoutRemitenteInput[]
    createMany?: CorreosCreateManyRemitenteInputEnvelope
    connect?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
  }

  export type CorreosUncheckedCreateNestedManyWithoutDestinatarioInput = {
    create?: XOR<CorreosCreateWithoutDestinatarioInput, CorreosUncheckedCreateWithoutDestinatarioInput> | CorreosCreateWithoutDestinatarioInput[] | CorreosUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: CorreosCreateOrConnectWithoutDestinatarioInput | CorreosCreateOrConnectWithoutDestinatarioInput[]
    createMany?: CorreosCreateManyDestinatarioInputEnvelope
    connect?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
  }

  export type FavoritosUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<FavoritosCreateWithoutUsuarioInput, FavoritosUncheckedCreateWithoutUsuarioInput> | FavoritosCreateWithoutUsuarioInput[] | FavoritosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutUsuarioInput | FavoritosCreateOrConnectWithoutUsuarioInput[]
    createMany?: FavoritosCreateManyUsuarioInputEnvelope
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
  }

  export type BloqueadosUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<BloqueadosCreateWithoutUsuarioInput, BloqueadosUncheckedCreateWithoutUsuarioInput> | BloqueadosCreateWithoutUsuarioInput[] | BloqueadosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: BloqueadosCreateOrConnectWithoutUsuarioInput | BloqueadosCreateOrConnectWithoutUsuarioInput[]
    createMany?: BloqueadosCreateManyUsuarioInputEnvelope
    connect?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
  }

  export type BloqueadosUncheckedCreateNestedManyWithoutUsuarioBloqueadoInput = {
    create?: XOR<BloqueadosCreateWithoutUsuarioBloqueadoInput, BloqueadosUncheckedCreateWithoutUsuarioBloqueadoInput> | BloqueadosCreateWithoutUsuarioBloqueadoInput[] | BloqueadosUncheckedCreateWithoutUsuarioBloqueadoInput[]
    connectOrCreate?: BloqueadosCreateOrConnectWithoutUsuarioBloqueadoInput | BloqueadosCreateOrConnectWithoutUsuarioBloqueadoInput[]
    createMany?: BloqueadosCreateManyUsuarioBloqueadoInputEnvelope
    connect?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type CorreosUpdateManyWithoutRemitenteNestedInput = {
    create?: XOR<CorreosCreateWithoutRemitenteInput, CorreosUncheckedCreateWithoutRemitenteInput> | CorreosCreateWithoutRemitenteInput[] | CorreosUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: CorreosCreateOrConnectWithoutRemitenteInput | CorreosCreateOrConnectWithoutRemitenteInput[]
    upsert?: CorreosUpsertWithWhereUniqueWithoutRemitenteInput | CorreosUpsertWithWhereUniqueWithoutRemitenteInput[]
    createMany?: CorreosCreateManyRemitenteInputEnvelope
    set?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    disconnect?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    delete?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    connect?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    update?: CorreosUpdateWithWhereUniqueWithoutRemitenteInput | CorreosUpdateWithWhereUniqueWithoutRemitenteInput[]
    updateMany?: CorreosUpdateManyWithWhereWithoutRemitenteInput | CorreosUpdateManyWithWhereWithoutRemitenteInput[]
    deleteMany?: CorreosScalarWhereInput | CorreosScalarWhereInput[]
  }

  export type CorreosUpdateManyWithoutDestinatarioNestedInput = {
    create?: XOR<CorreosCreateWithoutDestinatarioInput, CorreosUncheckedCreateWithoutDestinatarioInput> | CorreosCreateWithoutDestinatarioInput[] | CorreosUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: CorreosCreateOrConnectWithoutDestinatarioInput | CorreosCreateOrConnectWithoutDestinatarioInput[]
    upsert?: CorreosUpsertWithWhereUniqueWithoutDestinatarioInput | CorreosUpsertWithWhereUniqueWithoutDestinatarioInput[]
    createMany?: CorreosCreateManyDestinatarioInputEnvelope
    set?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    disconnect?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    delete?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    connect?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    update?: CorreosUpdateWithWhereUniqueWithoutDestinatarioInput | CorreosUpdateWithWhereUniqueWithoutDestinatarioInput[]
    updateMany?: CorreosUpdateManyWithWhereWithoutDestinatarioInput | CorreosUpdateManyWithWhereWithoutDestinatarioInput[]
    deleteMany?: CorreosScalarWhereInput | CorreosScalarWhereInput[]
  }

  export type FavoritosUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<FavoritosCreateWithoutUsuarioInput, FavoritosUncheckedCreateWithoutUsuarioInput> | FavoritosCreateWithoutUsuarioInput[] | FavoritosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutUsuarioInput | FavoritosCreateOrConnectWithoutUsuarioInput[]
    upsert?: FavoritosUpsertWithWhereUniqueWithoutUsuarioInput | FavoritosUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: FavoritosCreateManyUsuarioInputEnvelope
    set?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    disconnect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    delete?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    update?: FavoritosUpdateWithWhereUniqueWithoutUsuarioInput | FavoritosUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: FavoritosUpdateManyWithWhereWithoutUsuarioInput | FavoritosUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: FavoritosScalarWhereInput | FavoritosScalarWhereInput[]
  }

  export type BloqueadosUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<BloqueadosCreateWithoutUsuarioInput, BloqueadosUncheckedCreateWithoutUsuarioInput> | BloqueadosCreateWithoutUsuarioInput[] | BloqueadosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: BloqueadosCreateOrConnectWithoutUsuarioInput | BloqueadosCreateOrConnectWithoutUsuarioInput[]
    upsert?: BloqueadosUpsertWithWhereUniqueWithoutUsuarioInput | BloqueadosUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: BloqueadosCreateManyUsuarioInputEnvelope
    set?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    disconnect?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    delete?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    connect?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    update?: BloqueadosUpdateWithWhereUniqueWithoutUsuarioInput | BloqueadosUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: BloqueadosUpdateManyWithWhereWithoutUsuarioInput | BloqueadosUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: BloqueadosScalarWhereInput | BloqueadosScalarWhereInput[]
  }

  export type BloqueadosUpdateManyWithoutUsuarioBloqueadoNestedInput = {
    create?: XOR<BloqueadosCreateWithoutUsuarioBloqueadoInput, BloqueadosUncheckedCreateWithoutUsuarioBloqueadoInput> | BloqueadosCreateWithoutUsuarioBloqueadoInput[] | BloqueadosUncheckedCreateWithoutUsuarioBloqueadoInput[]
    connectOrCreate?: BloqueadosCreateOrConnectWithoutUsuarioBloqueadoInput | BloqueadosCreateOrConnectWithoutUsuarioBloqueadoInput[]
    upsert?: BloqueadosUpsertWithWhereUniqueWithoutUsuarioBloqueadoInput | BloqueadosUpsertWithWhereUniqueWithoutUsuarioBloqueadoInput[]
    createMany?: BloqueadosCreateManyUsuarioBloqueadoInputEnvelope
    set?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    disconnect?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    delete?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    connect?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    update?: BloqueadosUpdateWithWhereUniqueWithoutUsuarioBloqueadoInput | BloqueadosUpdateWithWhereUniqueWithoutUsuarioBloqueadoInput[]
    updateMany?: BloqueadosUpdateManyWithWhereWithoutUsuarioBloqueadoInput | BloqueadosUpdateManyWithWhereWithoutUsuarioBloqueadoInput[]
    deleteMany?: BloqueadosScalarWhereInput | BloqueadosScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CorreosUncheckedUpdateManyWithoutRemitenteNestedInput = {
    create?: XOR<CorreosCreateWithoutRemitenteInput, CorreosUncheckedCreateWithoutRemitenteInput> | CorreosCreateWithoutRemitenteInput[] | CorreosUncheckedCreateWithoutRemitenteInput[]
    connectOrCreate?: CorreosCreateOrConnectWithoutRemitenteInput | CorreosCreateOrConnectWithoutRemitenteInput[]
    upsert?: CorreosUpsertWithWhereUniqueWithoutRemitenteInput | CorreosUpsertWithWhereUniqueWithoutRemitenteInput[]
    createMany?: CorreosCreateManyRemitenteInputEnvelope
    set?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    disconnect?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    delete?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    connect?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    update?: CorreosUpdateWithWhereUniqueWithoutRemitenteInput | CorreosUpdateWithWhereUniqueWithoutRemitenteInput[]
    updateMany?: CorreosUpdateManyWithWhereWithoutRemitenteInput | CorreosUpdateManyWithWhereWithoutRemitenteInput[]
    deleteMany?: CorreosScalarWhereInput | CorreosScalarWhereInput[]
  }

  export type CorreosUncheckedUpdateManyWithoutDestinatarioNestedInput = {
    create?: XOR<CorreosCreateWithoutDestinatarioInput, CorreosUncheckedCreateWithoutDestinatarioInput> | CorreosCreateWithoutDestinatarioInput[] | CorreosUncheckedCreateWithoutDestinatarioInput[]
    connectOrCreate?: CorreosCreateOrConnectWithoutDestinatarioInput | CorreosCreateOrConnectWithoutDestinatarioInput[]
    upsert?: CorreosUpsertWithWhereUniqueWithoutDestinatarioInput | CorreosUpsertWithWhereUniqueWithoutDestinatarioInput[]
    createMany?: CorreosCreateManyDestinatarioInputEnvelope
    set?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    disconnect?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    delete?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    connect?: CorreosWhereUniqueInput | CorreosWhereUniqueInput[]
    update?: CorreosUpdateWithWhereUniqueWithoutDestinatarioInput | CorreosUpdateWithWhereUniqueWithoutDestinatarioInput[]
    updateMany?: CorreosUpdateManyWithWhereWithoutDestinatarioInput | CorreosUpdateManyWithWhereWithoutDestinatarioInput[]
    deleteMany?: CorreosScalarWhereInput | CorreosScalarWhereInput[]
  }

  export type FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<FavoritosCreateWithoutUsuarioInput, FavoritosUncheckedCreateWithoutUsuarioInput> | FavoritosCreateWithoutUsuarioInput[] | FavoritosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutUsuarioInput | FavoritosCreateOrConnectWithoutUsuarioInput[]
    upsert?: FavoritosUpsertWithWhereUniqueWithoutUsuarioInput | FavoritosUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: FavoritosCreateManyUsuarioInputEnvelope
    set?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    disconnect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    delete?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    update?: FavoritosUpdateWithWhereUniqueWithoutUsuarioInput | FavoritosUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: FavoritosUpdateManyWithWhereWithoutUsuarioInput | FavoritosUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: FavoritosScalarWhereInput | FavoritosScalarWhereInput[]
  }

  export type BloqueadosUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<BloqueadosCreateWithoutUsuarioInput, BloqueadosUncheckedCreateWithoutUsuarioInput> | BloqueadosCreateWithoutUsuarioInput[] | BloqueadosUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: BloqueadosCreateOrConnectWithoutUsuarioInput | BloqueadosCreateOrConnectWithoutUsuarioInput[]
    upsert?: BloqueadosUpsertWithWhereUniqueWithoutUsuarioInput | BloqueadosUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: BloqueadosCreateManyUsuarioInputEnvelope
    set?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    disconnect?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    delete?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    connect?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    update?: BloqueadosUpdateWithWhereUniqueWithoutUsuarioInput | BloqueadosUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: BloqueadosUpdateManyWithWhereWithoutUsuarioInput | BloqueadosUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: BloqueadosScalarWhereInput | BloqueadosScalarWhereInput[]
  }

  export type BloqueadosUncheckedUpdateManyWithoutUsuarioBloqueadoNestedInput = {
    create?: XOR<BloqueadosCreateWithoutUsuarioBloqueadoInput, BloqueadosUncheckedCreateWithoutUsuarioBloqueadoInput> | BloqueadosCreateWithoutUsuarioBloqueadoInput[] | BloqueadosUncheckedCreateWithoutUsuarioBloqueadoInput[]
    connectOrCreate?: BloqueadosCreateOrConnectWithoutUsuarioBloqueadoInput | BloqueadosCreateOrConnectWithoutUsuarioBloqueadoInput[]
    upsert?: BloqueadosUpsertWithWhereUniqueWithoutUsuarioBloqueadoInput | BloqueadosUpsertWithWhereUniqueWithoutUsuarioBloqueadoInput[]
    createMany?: BloqueadosCreateManyUsuarioBloqueadoInputEnvelope
    set?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    disconnect?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    delete?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    connect?: BloqueadosWhereUniqueInput | BloqueadosWhereUniqueInput[]
    update?: BloqueadosUpdateWithWhereUniqueWithoutUsuarioBloqueadoInput | BloqueadosUpdateWithWhereUniqueWithoutUsuarioBloqueadoInput[]
    updateMany?: BloqueadosUpdateManyWithWhereWithoutUsuarioBloqueadoInput | BloqueadosUpdateManyWithWhereWithoutUsuarioBloqueadoInput[]
    deleteMany?: BloqueadosScalarWhereInput | BloqueadosScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutCorreosEnviadosInput = {
    create?: XOR<UsuarioCreateWithoutCorreosEnviadosInput, UsuarioUncheckedCreateWithoutCorreosEnviadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreosEnviadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutCorreosRecibidosInput = {
    create?: XOR<UsuarioCreateWithoutCorreosRecibidosInput, UsuarioUncheckedCreateWithoutCorreosRecibidosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreosRecibidosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type FavoritosCreateNestedManyWithoutCorreoInput = {
    create?: XOR<FavoritosCreateWithoutCorreoInput, FavoritosUncheckedCreateWithoutCorreoInput> | FavoritosCreateWithoutCorreoInput[] | FavoritosUncheckedCreateWithoutCorreoInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutCorreoInput | FavoritosCreateOrConnectWithoutCorreoInput[]
    createMany?: FavoritosCreateManyCorreoInputEnvelope
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
  }

  export type FavoritosUncheckedCreateNestedManyWithoutCorreoInput = {
    create?: XOR<FavoritosCreateWithoutCorreoInput, FavoritosUncheckedCreateWithoutCorreoInput> | FavoritosCreateWithoutCorreoInput[] | FavoritosUncheckedCreateWithoutCorreoInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutCorreoInput | FavoritosCreateOrConnectWithoutCorreoInput[]
    createMany?: FavoritosCreateManyCorreoInputEnvelope
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UsuarioUpdateOneRequiredWithoutCorreosEnviadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutCorreosEnviadosInput, UsuarioUncheckedCreateWithoutCorreosEnviadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreosEnviadosInput
    upsert?: UsuarioUpsertWithoutCorreosEnviadosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCorreosEnviadosInput, UsuarioUpdateWithoutCorreosEnviadosInput>, UsuarioUncheckedUpdateWithoutCorreosEnviadosInput>
  }

  export type UsuarioUpdateOneRequiredWithoutCorreosRecibidosNestedInput = {
    create?: XOR<UsuarioCreateWithoutCorreosRecibidosInput, UsuarioUncheckedCreateWithoutCorreosRecibidosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutCorreosRecibidosInput
    upsert?: UsuarioUpsertWithoutCorreosRecibidosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutCorreosRecibidosInput, UsuarioUpdateWithoutCorreosRecibidosInput>, UsuarioUncheckedUpdateWithoutCorreosRecibidosInput>
  }

  export type FavoritosUpdateManyWithoutCorreoNestedInput = {
    create?: XOR<FavoritosCreateWithoutCorreoInput, FavoritosUncheckedCreateWithoutCorreoInput> | FavoritosCreateWithoutCorreoInput[] | FavoritosUncheckedCreateWithoutCorreoInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutCorreoInput | FavoritosCreateOrConnectWithoutCorreoInput[]
    upsert?: FavoritosUpsertWithWhereUniqueWithoutCorreoInput | FavoritosUpsertWithWhereUniqueWithoutCorreoInput[]
    createMany?: FavoritosCreateManyCorreoInputEnvelope
    set?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    disconnect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    delete?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    update?: FavoritosUpdateWithWhereUniqueWithoutCorreoInput | FavoritosUpdateWithWhereUniqueWithoutCorreoInput[]
    updateMany?: FavoritosUpdateManyWithWhereWithoutCorreoInput | FavoritosUpdateManyWithWhereWithoutCorreoInput[]
    deleteMany?: FavoritosScalarWhereInput | FavoritosScalarWhereInput[]
  }

  export type FavoritosUncheckedUpdateManyWithoutCorreoNestedInput = {
    create?: XOR<FavoritosCreateWithoutCorreoInput, FavoritosUncheckedCreateWithoutCorreoInput> | FavoritosCreateWithoutCorreoInput[] | FavoritosUncheckedCreateWithoutCorreoInput[]
    connectOrCreate?: FavoritosCreateOrConnectWithoutCorreoInput | FavoritosCreateOrConnectWithoutCorreoInput[]
    upsert?: FavoritosUpsertWithWhereUniqueWithoutCorreoInput | FavoritosUpsertWithWhereUniqueWithoutCorreoInput[]
    createMany?: FavoritosCreateManyCorreoInputEnvelope
    set?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    disconnect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    delete?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    connect?: FavoritosWhereUniqueInput | FavoritosWhereUniqueInput[]
    update?: FavoritosUpdateWithWhereUniqueWithoutCorreoInput | FavoritosUpdateWithWhereUniqueWithoutCorreoInput[]
    updateMany?: FavoritosUpdateManyWithWhereWithoutCorreoInput | FavoritosUpdateManyWithWhereWithoutCorreoInput[]
    deleteMany?: FavoritosScalarWhereInput | FavoritosScalarWhereInput[]
  }

  export type UsuarioCreateNestedOneWithoutFavoritosInput = {
    create?: XOR<UsuarioCreateWithoutFavoritosInput, UsuarioUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutFavoritosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type CorreosCreateNestedOneWithoutFavoritosInput = {
    create?: XOR<CorreosCreateWithoutFavoritosInput, CorreosUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: CorreosCreateOrConnectWithoutFavoritosInput
    connect?: CorreosWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutFavoritosNestedInput = {
    create?: XOR<UsuarioCreateWithoutFavoritosInput, UsuarioUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutFavoritosInput
    upsert?: UsuarioUpsertWithoutFavoritosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutFavoritosInput, UsuarioUpdateWithoutFavoritosInput>, UsuarioUncheckedUpdateWithoutFavoritosInput>
  }

  export type CorreosUpdateOneRequiredWithoutFavoritosNestedInput = {
    create?: XOR<CorreosCreateWithoutFavoritosInput, CorreosUncheckedCreateWithoutFavoritosInput>
    connectOrCreate?: CorreosCreateOrConnectWithoutFavoritosInput
    upsert?: CorreosUpsertWithoutFavoritosInput
    connect?: CorreosWhereUniqueInput
    update?: XOR<XOR<CorreosUpdateToOneWithWhereWithoutFavoritosInput, CorreosUpdateWithoutFavoritosInput>, CorreosUncheckedUpdateWithoutFavoritosInput>
  }

  export type UsuarioCreateNestedOneWithoutBloqueadosInput = {
    create?: XOR<UsuarioCreateWithoutBloqueadosInput, UsuarioUncheckedCreateWithoutBloqueadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutBloqueadosInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioCreateNestedOneWithoutBloqueadoPorInput = {
    create?: XOR<UsuarioCreateWithoutBloqueadoPorInput, UsuarioUncheckedCreateWithoutBloqueadoPorInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutBloqueadoPorInput
    connect?: UsuarioWhereUniqueInput
  }

  export type UsuarioUpdateOneRequiredWithoutBloqueadosNestedInput = {
    create?: XOR<UsuarioCreateWithoutBloqueadosInput, UsuarioUncheckedCreateWithoutBloqueadosInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutBloqueadosInput
    upsert?: UsuarioUpsertWithoutBloqueadosInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutBloqueadosInput, UsuarioUpdateWithoutBloqueadosInput>, UsuarioUncheckedUpdateWithoutBloqueadosInput>
  }

  export type UsuarioUpdateOneRequiredWithoutBloqueadoPorNestedInput = {
    create?: XOR<UsuarioCreateWithoutBloqueadoPorInput, UsuarioUncheckedCreateWithoutBloqueadoPorInput>
    connectOrCreate?: UsuarioCreateOrConnectWithoutBloqueadoPorInput
    upsert?: UsuarioUpsertWithoutBloqueadoPorInput
    connect?: UsuarioWhereUniqueInput
    update?: XOR<XOR<UsuarioUpdateToOneWithWhereWithoutBloqueadoPorInput, UsuarioUpdateWithoutBloqueadoPorInput>, UsuarioUncheckedUpdateWithoutBloqueadoPorInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type CorreosCreateWithoutRemitenteInput = {
    asunto?: string | null
    cuerpo?: string | null
    fecha?: Date | string
    destinatario: UsuarioCreateNestedOneWithoutCorreosRecibidosInput
    favoritos?: FavoritosCreateNestedManyWithoutCorreoInput
  }

  export type CorreosUncheckedCreateWithoutRemitenteInput = {
    id?: number
    destinatario_id: number
    asunto?: string | null
    cuerpo?: string | null
    fecha?: Date | string
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutCorreoInput
  }

  export type CorreosCreateOrConnectWithoutRemitenteInput = {
    where: CorreosWhereUniqueInput
    create: XOR<CorreosCreateWithoutRemitenteInput, CorreosUncheckedCreateWithoutRemitenteInput>
  }

  export type CorreosCreateManyRemitenteInputEnvelope = {
    data: CorreosCreateManyRemitenteInput | CorreosCreateManyRemitenteInput[]
    skipDuplicates?: boolean
  }

  export type CorreosCreateWithoutDestinatarioInput = {
    asunto?: string | null
    cuerpo?: string | null
    fecha?: Date | string
    remitente: UsuarioCreateNestedOneWithoutCorreosEnviadosInput
    favoritos?: FavoritosCreateNestedManyWithoutCorreoInput
  }

  export type CorreosUncheckedCreateWithoutDestinatarioInput = {
    id?: number
    remitente_id: number
    asunto?: string | null
    cuerpo?: string | null
    fecha?: Date | string
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutCorreoInput
  }

  export type CorreosCreateOrConnectWithoutDestinatarioInput = {
    where: CorreosWhereUniqueInput
    create: XOR<CorreosCreateWithoutDestinatarioInput, CorreosUncheckedCreateWithoutDestinatarioInput>
  }

  export type CorreosCreateManyDestinatarioInputEnvelope = {
    data: CorreosCreateManyDestinatarioInput | CorreosCreateManyDestinatarioInput[]
    skipDuplicates?: boolean
  }

  export type FavoritosCreateWithoutUsuarioInput = {
    correo: CorreosCreateNestedOneWithoutFavoritosInput
  }

  export type FavoritosUncheckedCreateWithoutUsuarioInput = {
    id?: number
    correo_id: number
  }

  export type FavoritosCreateOrConnectWithoutUsuarioInput = {
    where: FavoritosWhereUniqueInput
    create: XOR<FavoritosCreateWithoutUsuarioInput, FavoritosUncheckedCreateWithoutUsuarioInput>
  }

  export type FavoritosCreateManyUsuarioInputEnvelope = {
    data: FavoritosCreateManyUsuarioInput | FavoritosCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type BloqueadosCreateWithoutUsuarioInput = {
    usuarioBloqueado: UsuarioCreateNestedOneWithoutBloqueadoPorInput
  }

  export type BloqueadosUncheckedCreateWithoutUsuarioInput = {
    id?: number
    usuario_bloqueado_id: number
  }

  export type BloqueadosCreateOrConnectWithoutUsuarioInput = {
    where: BloqueadosWhereUniqueInput
    create: XOR<BloqueadosCreateWithoutUsuarioInput, BloqueadosUncheckedCreateWithoutUsuarioInput>
  }

  export type BloqueadosCreateManyUsuarioInputEnvelope = {
    data: BloqueadosCreateManyUsuarioInput | BloqueadosCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type BloqueadosCreateWithoutUsuarioBloqueadoInput = {
    usuario: UsuarioCreateNestedOneWithoutBloqueadosInput
  }

  export type BloqueadosUncheckedCreateWithoutUsuarioBloqueadoInput = {
    id?: number
    usuario_id: number
  }

  export type BloqueadosCreateOrConnectWithoutUsuarioBloqueadoInput = {
    where: BloqueadosWhereUniqueInput
    create: XOR<BloqueadosCreateWithoutUsuarioBloqueadoInput, BloqueadosUncheckedCreateWithoutUsuarioBloqueadoInput>
  }

  export type BloqueadosCreateManyUsuarioBloqueadoInputEnvelope = {
    data: BloqueadosCreateManyUsuarioBloqueadoInput | BloqueadosCreateManyUsuarioBloqueadoInput[]
    skipDuplicates?: boolean
  }

  export type CorreosUpsertWithWhereUniqueWithoutRemitenteInput = {
    where: CorreosWhereUniqueInput
    update: XOR<CorreosUpdateWithoutRemitenteInput, CorreosUncheckedUpdateWithoutRemitenteInput>
    create: XOR<CorreosCreateWithoutRemitenteInput, CorreosUncheckedCreateWithoutRemitenteInput>
  }

  export type CorreosUpdateWithWhereUniqueWithoutRemitenteInput = {
    where: CorreosWhereUniqueInput
    data: XOR<CorreosUpdateWithoutRemitenteInput, CorreosUncheckedUpdateWithoutRemitenteInput>
  }

  export type CorreosUpdateManyWithWhereWithoutRemitenteInput = {
    where: CorreosScalarWhereInput
    data: XOR<CorreosUpdateManyMutationInput, CorreosUncheckedUpdateManyWithoutRemitenteInput>
  }

  export type CorreosScalarWhereInput = {
    AND?: CorreosScalarWhereInput | CorreosScalarWhereInput[]
    OR?: CorreosScalarWhereInput[]
    NOT?: CorreosScalarWhereInput | CorreosScalarWhereInput[]
    id?: IntFilter<"Correos"> | number
    remitente_id?: IntFilter<"Correos"> | number
    destinatario_id?: IntFilter<"Correos"> | number
    asunto?: StringNullableFilter<"Correos"> | string | null
    cuerpo?: StringNullableFilter<"Correos"> | string | null
    fecha?: DateTimeFilter<"Correos"> | Date | string
  }

  export type CorreosUpsertWithWhereUniqueWithoutDestinatarioInput = {
    where: CorreosWhereUniqueInput
    update: XOR<CorreosUpdateWithoutDestinatarioInput, CorreosUncheckedUpdateWithoutDestinatarioInput>
    create: XOR<CorreosCreateWithoutDestinatarioInput, CorreosUncheckedCreateWithoutDestinatarioInput>
  }

  export type CorreosUpdateWithWhereUniqueWithoutDestinatarioInput = {
    where: CorreosWhereUniqueInput
    data: XOR<CorreosUpdateWithoutDestinatarioInput, CorreosUncheckedUpdateWithoutDestinatarioInput>
  }

  export type CorreosUpdateManyWithWhereWithoutDestinatarioInput = {
    where: CorreosScalarWhereInput
    data: XOR<CorreosUpdateManyMutationInput, CorreosUncheckedUpdateManyWithoutDestinatarioInput>
  }

  export type FavoritosUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: FavoritosWhereUniqueInput
    update: XOR<FavoritosUpdateWithoutUsuarioInput, FavoritosUncheckedUpdateWithoutUsuarioInput>
    create: XOR<FavoritosCreateWithoutUsuarioInput, FavoritosUncheckedCreateWithoutUsuarioInput>
  }

  export type FavoritosUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: FavoritosWhereUniqueInput
    data: XOR<FavoritosUpdateWithoutUsuarioInput, FavoritosUncheckedUpdateWithoutUsuarioInput>
  }

  export type FavoritosUpdateManyWithWhereWithoutUsuarioInput = {
    where: FavoritosScalarWhereInput
    data: XOR<FavoritosUpdateManyMutationInput, FavoritosUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type FavoritosScalarWhereInput = {
    AND?: FavoritosScalarWhereInput | FavoritosScalarWhereInput[]
    OR?: FavoritosScalarWhereInput[]
    NOT?: FavoritosScalarWhereInput | FavoritosScalarWhereInput[]
    id?: IntFilter<"Favoritos"> | number
    usuario_id?: IntFilter<"Favoritos"> | number
    correo_id?: IntFilter<"Favoritos"> | number
  }

  export type BloqueadosUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: BloqueadosWhereUniqueInput
    update: XOR<BloqueadosUpdateWithoutUsuarioInput, BloqueadosUncheckedUpdateWithoutUsuarioInput>
    create: XOR<BloqueadosCreateWithoutUsuarioInput, BloqueadosUncheckedCreateWithoutUsuarioInput>
  }

  export type BloqueadosUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: BloqueadosWhereUniqueInput
    data: XOR<BloqueadosUpdateWithoutUsuarioInput, BloqueadosUncheckedUpdateWithoutUsuarioInput>
  }

  export type BloqueadosUpdateManyWithWhereWithoutUsuarioInput = {
    where: BloqueadosScalarWhereInput
    data: XOR<BloqueadosUpdateManyMutationInput, BloqueadosUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type BloqueadosScalarWhereInput = {
    AND?: BloqueadosScalarWhereInput | BloqueadosScalarWhereInput[]
    OR?: BloqueadosScalarWhereInput[]
    NOT?: BloqueadosScalarWhereInput | BloqueadosScalarWhereInput[]
    id?: IntFilter<"Bloqueados"> | number
    usuario_id?: IntFilter<"Bloqueados"> | number
    usuario_bloqueado_id?: IntFilter<"Bloqueados"> | number
  }

  export type BloqueadosUpsertWithWhereUniqueWithoutUsuarioBloqueadoInput = {
    where: BloqueadosWhereUniqueInput
    update: XOR<BloqueadosUpdateWithoutUsuarioBloqueadoInput, BloqueadosUncheckedUpdateWithoutUsuarioBloqueadoInput>
    create: XOR<BloqueadosCreateWithoutUsuarioBloqueadoInput, BloqueadosUncheckedCreateWithoutUsuarioBloqueadoInput>
  }

  export type BloqueadosUpdateWithWhereUniqueWithoutUsuarioBloqueadoInput = {
    where: BloqueadosWhereUniqueInput
    data: XOR<BloqueadosUpdateWithoutUsuarioBloqueadoInput, BloqueadosUncheckedUpdateWithoutUsuarioBloqueadoInput>
  }

  export type BloqueadosUpdateManyWithWhereWithoutUsuarioBloqueadoInput = {
    where: BloqueadosScalarWhereInput
    data: XOR<BloqueadosUpdateManyMutationInput, BloqueadosUncheckedUpdateManyWithoutUsuarioBloqueadoInput>
  }

  export type UsuarioCreateWithoutCorreosEnviadosInput = {
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    correosRecibidos?: CorreosCreateNestedManyWithoutDestinatarioInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
    bloqueados?: BloqueadosCreateNestedManyWithoutUsuarioInput
    bloqueadoPor?: BloqueadosCreateNestedManyWithoutUsuarioBloqueadoInput
  }

  export type UsuarioUncheckedCreateWithoutCorreosEnviadosInput = {
    id?: number
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    correosRecibidos?: CorreosUncheckedCreateNestedManyWithoutDestinatarioInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
    bloqueados?: BloqueadosUncheckedCreateNestedManyWithoutUsuarioInput
    bloqueadoPor?: BloqueadosUncheckedCreateNestedManyWithoutUsuarioBloqueadoInput
  }

  export type UsuarioCreateOrConnectWithoutCorreosEnviadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCorreosEnviadosInput, UsuarioUncheckedCreateWithoutCorreosEnviadosInput>
  }

  export type UsuarioCreateWithoutCorreosRecibidosInput = {
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    correosEnviados?: CorreosCreateNestedManyWithoutRemitenteInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
    bloqueados?: BloqueadosCreateNestedManyWithoutUsuarioInput
    bloqueadoPor?: BloqueadosCreateNestedManyWithoutUsuarioBloqueadoInput
  }

  export type UsuarioUncheckedCreateWithoutCorreosRecibidosInput = {
    id?: number
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    correosEnviados?: CorreosUncheckedCreateNestedManyWithoutRemitenteInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
    bloqueados?: BloqueadosUncheckedCreateNestedManyWithoutUsuarioInput
    bloqueadoPor?: BloqueadosUncheckedCreateNestedManyWithoutUsuarioBloqueadoInput
  }

  export type UsuarioCreateOrConnectWithoutCorreosRecibidosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutCorreosRecibidosInput, UsuarioUncheckedCreateWithoutCorreosRecibidosInput>
  }

  export type FavoritosCreateWithoutCorreoInput = {
    usuario: UsuarioCreateNestedOneWithoutFavoritosInput
  }

  export type FavoritosUncheckedCreateWithoutCorreoInput = {
    id?: number
    usuario_id: number
  }

  export type FavoritosCreateOrConnectWithoutCorreoInput = {
    where: FavoritosWhereUniqueInput
    create: XOR<FavoritosCreateWithoutCorreoInput, FavoritosUncheckedCreateWithoutCorreoInput>
  }

  export type FavoritosCreateManyCorreoInputEnvelope = {
    data: FavoritosCreateManyCorreoInput | FavoritosCreateManyCorreoInput[]
    skipDuplicates?: boolean
  }

  export type UsuarioUpsertWithoutCorreosEnviadosInput = {
    update: XOR<UsuarioUpdateWithoutCorreosEnviadosInput, UsuarioUncheckedUpdateWithoutCorreosEnviadosInput>
    create: XOR<UsuarioCreateWithoutCorreosEnviadosInput, UsuarioUncheckedCreateWithoutCorreosEnviadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCorreosEnviadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCorreosEnviadosInput, UsuarioUncheckedUpdateWithoutCorreosEnviadosInput>
  }

  export type UsuarioUpdateWithoutCorreosEnviadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    correosRecibidos?: CorreosUpdateManyWithoutDestinatarioNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
    bloqueados?: BloqueadosUpdateManyWithoutUsuarioNestedInput
    bloqueadoPor?: BloqueadosUpdateManyWithoutUsuarioBloqueadoNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCorreosEnviadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    correosRecibidos?: CorreosUncheckedUpdateManyWithoutDestinatarioNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
    bloqueados?: BloqueadosUncheckedUpdateManyWithoutUsuarioNestedInput
    bloqueadoPor?: BloqueadosUncheckedUpdateManyWithoutUsuarioBloqueadoNestedInput
  }

  export type UsuarioUpsertWithoutCorreosRecibidosInput = {
    update: XOR<UsuarioUpdateWithoutCorreosRecibidosInput, UsuarioUncheckedUpdateWithoutCorreosRecibidosInput>
    create: XOR<UsuarioCreateWithoutCorreosRecibidosInput, UsuarioUncheckedCreateWithoutCorreosRecibidosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutCorreosRecibidosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutCorreosRecibidosInput, UsuarioUncheckedUpdateWithoutCorreosRecibidosInput>
  }

  export type UsuarioUpdateWithoutCorreosRecibidosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    correosEnviados?: CorreosUpdateManyWithoutRemitenteNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
    bloqueados?: BloqueadosUpdateManyWithoutUsuarioNestedInput
    bloqueadoPor?: BloqueadosUpdateManyWithoutUsuarioBloqueadoNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutCorreosRecibidosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    correosEnviados?: CorreosUncheckedUpdateManyWithoutRemitenteNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
    bloqueados?: BloqueadosUncheckedUpdateManyWithoutUsuarioNestedInput
    bloqueadoPor?: BloqueadosUncheckedUpdateManyWithoutUsuarioBloqueadoNestedInput
  }

  export type FavoritosUpsertWithWhereUniqueWithoutCorreoInput = {
    where: FavoritosWhereUniqueInput
    update: XOR<FavoritosUpdateWithoutCorreoInput, FavoritosUncheckedUpdateWithoutCorreoInput>
    create: XOR<FavoritosCreateWithoutCorreoInput, FavoritosUncheckedCreateWithoutCorreoInput>
  }

  export type FavoritosUpdateWithWhereUniqueWithoutCorreoInput = {
    where: FavoritosWhereUniqueInput
    data: XOR<FavoritosUpdateWithoutCorreoInput, FavoritosUncheckedUpdateWithoutCorreoInput>
  }

  export type FavoritosUpdateManyWithWhereWithoutCorreoInput = {
    where: FavoritosScalarWhereInput
    data: XOR<FavoritosUpdateManyMutationInput, FavoritosUncheckedUpdateManyWithoutCorreoInput>
  }

  export type UsuarioCreateWithoutFavoritosInput = {
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    correosEnviados?: CorreosCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreosCreateNestedManyWithoutDestinatarioInput
    bloqueados?: BloqueadosCreateNestedManyWithoutUsuarioInput
    bloqueadoPor?: BloqueadosCreateNestedManyWithoutUsuarioBloqueadoInput
  }

  export type UsuarioUncheckedCreateWithoutFavoritosInput = {
    id?: number
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    correosEnviados?: CorreosUncheckedCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreosUncheckedCreateNestedManyWithoutDestinatarioInput
    bloqueados?: BloqueadosUncheckedCreateNestedManyWithoutUsuarioInput
    bloqueadoPor?: BloqueadosUncheckedCreateNestedManyWithoutUsuarioBloqueadoInput
  }

  export type UsuarioCreateOrConnectWithoutFavoritosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutFavoritosInput, UsuarioUncheckedCreateWithoutFavoritosInput>
  }

  export type CorreosCreateWithoutFavoritosInput = {
    asunto?: string | null
    cuerpo?: string | null
    fecha?: Date | string
    remitente: UsuarioCreateNestedOneWithoutCorreosEnviadosInput
    destinatario: UsuarioCreateNestedOneWithoutCorreosRecibidosInput
  }

  export type CorreosUncheckedCreateWithoutFavoritosInput = {
    id?: number
    remitente_id: number
    destinatario_id: number
    asunto?: string | null
    cuerpo?: string | null
    fecha?: Date | string
  }

  export type CorreosCreateOrConnectWithoutFavoritosInput = {
    where: CorreosWhereUniqueInput
    create: XOR<CorreosCreateWithoutFavoritosInput, CorreosUncheckedCreateWithoutFavoritosInput>
  }

  export type UsuarioUpsertWithoutFavoritosInput = {
    update: XOR<UsuarioUpdateWithoutFavoritosInput, UsuarioUncheckedUpdateWithoutFavoritosInput>
    create: XOR<UsuarioCreateWithoutFavoritosInput, UsuarioUncheckedCreateWithoutFavoritosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutFavoritosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutFavoritosInput, UsuarioUncheckedUpdateWithoutFavoritosInput>
  }

  export type UsuarioUpdateWithoutFavoritosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    correosEnviados?: CorreosUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreosUpdateManyWithoutDestinatarioNestedInput
    bloqueados?: BloqueadosUpdateManyWithoutUsuarioNestedInput
    bloqueadoPor?: BloqueadosUpdateManyWithoutUsuarioBloqueadoNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutFavoritosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    correosEnviados?: CorreosUncheckedUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreosUncheckedUpdateManyWithoutDestinatarioNestedInput
    bloqueados?: BloqueadosUncheckedUpdateManyWithoutUsuarioNestedInput
    bloqueadoPor?: BloqueadosUncheckedUpdateManyWithoutUsuarioBloqueadoNestedInput
  }

  export type CorreosUpsertWithoutFavoritosInput = {
    update: XOR<CorreosUpdateWithoutFavoritosInput, CorreosUncheckedUpdateWithoutFavoritosInput>
    create: XOR<CorreosCreateWithoutFavoritosInput, CorreosUncheckedCreateWithoutFavoritosInput>
    where?: CorreosWhereInput
  }

  export type CorreosUpdateToOneWithWhereWithoutFavoritosInput = {
    where?: CorreosWhereInput
    data: XOR<CorreosUpdateWithoutFavoritosInput, CorreosUncheckedUpdateWithoutFavoritosInput>
  }

  export type CorreosUpdateWithoutFavoritosInput = {
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    remitente?: UsuarioUpdateOneRequiredWithoutCorreosEnviadosNestedInput
    destinatario?: UsuarioUpdateOneRequiredWithoutCorreosRecibidosNestedInput
  }

  export type CorreosUncheckedUpdateWithoutFavoritosInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitente_id?: IntFieldUpdateOperationsInput | number
    destinatario_id?: IntFieldUpdateOperationsInput | number
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsuarioCreateWithoutBloqueadosInput = {
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    correosEnviados?: CorreosCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreosCreateNestedManyWithoutDestinatarioInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
    bloqueadoPor?: BloqueadosCreateNestedManyWithoutUsuarioBloqueadoInput
  }

  export type UsuarioUncheckedCreateWithoutBloqueadosInput = {
    id?: number
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    correosEnviados?: CorreosUncheckedCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreosUncheckedCreateNestedManyWithoutDestinatarioInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
    bloqueadoPor?: BloqueadosUncheckedCreateNestedManyWithoutUsuarioBloqueadoInput
  }

  export type UsuarioCreateOrConnectWithoutBloqueadosInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutBloqueadosInput, UsuarioUncheckedCreateWithoutBloqueadosInput>
  }

  export type UsuarioCreateWithoutBloqueadoPorInput = {
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    correosEnviados?: CorreosCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreosCreateNestedManyWithoutDestinatarioInput
    favoritos?: FavoritosCreateNestedManyWithoutUsuarioInput
    bloqueados?: BloqueadosCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioUncheckedCreateWithoutBloqueadoPorInput = {
    id?: number
    nombre: string
    correo: string
    clave: string
    descripcion?: string | null
    correosEnviados?: CorreosUncheckedCreateNestedManyWithoutRemitenteInput
    correosRecibidos?: CorreosUncheckedCreateNestedManyWithoutDestinatarioInput
    favoritos?: FavoritosUncheckedCreateNestedManyWithoutUsuarioInput
    bloqueados?: BloqueadosUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuarioCreateOrConnectWithoutBloqueadoPorInput = {
    where: UsuarioWhereUniqueInput
    create: XOR<UsuarioCreateWithoutBloqueadoPorInput, UsuarioUncheckedCreateWithoutBloqueadoPorInput>
  }

  export type UsuarioUpsertWithoutBloqueadosInput = {
    update: XOR<UsuarioUpdateWithoutBloqueadosInput, UsuarioUncheckedUpdateWithoutBloqueadosInput>
    create: XOR<UsuarioCreateWithoutBloqueadosInput, UsuarioUncheckedCreateWithoutBloqueadosInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutBloqueadosInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutBloqueadosInput, UsuarioUncheckedUpdateWithoutBloqueadosInput>
  }

  export type UsuarioUpdateWithoutBloqueadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    correosEnviados?: CorreosUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreosUpdateManyWithoutDestinatarioNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
    bloqueadoPor?: BloqueadosUpdateManyWithoutUsuarioBloqueadoNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutBloqueadosInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    correosEnviados?: CorreosUncheckedUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreosUncheckedUpdateManyWithoutDestinatarioNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
    bloqueadoPor?: BloqueadosUncheckedUpdateManyWithoutUsuarioBloqueadoNestedInput
  }

  export type UsuarioUpsertWithoutBloqueadoPorInput = {
    update: XOR<UsuarioUpdateWithoutBloqueadoPorInput, UsuarioUncheckedUpdateWithoutBloqueadoPorInput>
    create: XOR<UsuarioCreateWithoutBloqueadoPorInput, UsuarioUncheckedCreateWithoutBloqueadoPorInput>
    where?: UsuarioWhereInput
  }

  export type UsuarioUpdateToOneWithWhereWithoutBloqueadoPorInput = {
    where?: UsuarioWhereInput
    data: XOR<UsuarioUpdateWithoutBloqueadoPorInput, UsuarioUncheckedUpdateWithoutBloqueadoPorInput>
  }

  export type UsuarioUpdateWithoutBloqueadoPorInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    correosEnviados?: CorreosUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreosUpdateManyWithoutDestinatarioNestedInput
    favoritos?: FavoritosUpdateManyWithoutUsuarioNestedInput
    bloqueados?: BloqueadosUpdateManyWithoutUsuarioNestedInput
  }

  export type UsuarioUncheckedUpdateWithoutBloqueadoPorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    clave?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    correosEnviados?: CorreosUncheckedUpdateManyWithoutRemitenteNestedInput
    correosRecibidos?: CorreosUncheckedUpdateManyWithoutDestinatarioNestedInput
    favoritos?: FavoritosUncheckedUpdateManyWithoutUsuarioNestedInput
    bloqueados?: BloqueadosUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type CorreosCreateManyRemitenteInput = {
    id?: number
    destinatario_id: number
    asunto?: string | null
    cuerpo?: string | null
    fecha?: Date | string
  }

  export type CorreosCreateManyDestinatarioInput = {
    id?: number
    remitente_id: number
    asunto?: string | null
    cuerpo?: string | null
    fecha?: Date | string
  }

  export type FavoritosCreateManyUsuarioInput = {
    id?: number
    correo_id: number
  }

  export type BloqueadosCreateManyUsuarioInput = {
    id?: number
    usuario_bloqueado_id: number
  }

  export type BloqueadosCreateManyUsuarioBloqueadoInput = {
    id?: number
    usuario_id: number
  }

  export type CorreosUpdateWithoutRemitenteInput = {
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    destinatario?: UsuarioUpdateOneRequiredWithoutCorreosRecibidosNestedInput
    favoritos?: FavoritosUpdateManyWithoutCorreoNestedInput
  }

  export type CorreosUncheckedUpdateWithoutRemitenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    destinatario_id?: IntFieldUpdateOperationsInput | number
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    favoritos?: FavoritosUncheckedUpdateManyWithoutCorreoNestedInput
  }

  export type CorreosUncheckedUpdateManyWithoutRemitenteInput = {
    id?: IntFieldUpdateOperationsInput | number
    destinatario_id?: IntFieldUpdateOperationsInput | number
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CorreosUpdateWithoutDestinatarioInput = {
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    remitente?: UsuarioUpdateOneRequiredWithoutCorreosEnviadosNestedInput
    favoritos?: FavoritosUpdateManyWithoutCorreoNestedInput
  }

  export type CorreosUncheckedUpdateWithoutDestinatarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitente_id?: IntFieldUpdateOperationsInput | number
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    favoritos?: FavoritosUncheckedUpdateManyWithoutCorreoNestedInput
  }

  export type CorreosUncheckedUpdateManyWithoutDestinatarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    remitente_id?: IntFieldUpdateOperationsInput | number
    asunto?: NullableStringFieldUpdateOperationsInput | string | null
    cuerpo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoritosUpdateWithoutUsuarioInput = {
    correo?: CorreosUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type FavoritosUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    correo_id?: IntFieldUpdateOperationsInput | number
  }

  export type FavoritosUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    correo_id?: IntFieldUpdateOperationsInput | number
  }

  export type BloqueadosUpdateWithoutUsuarioInput = {
    usuarioBloqueado?: UsuarioUpdateOneRequiredWithoutBloqueadoPorNestedInput
  }

  export type BloqueadosUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_bloqueado_id?: IntFieldUpdateOperationsInput | number
  }

  export type BloqueadosUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_bloqueado_id?: IntFieldUpdateOperationsInput | number
  }

  export type BloqueadosUpdateWithoutUsuarioBloqueadoInput = {
    usuario?: UsuarioUpdateOneRequiredWithoutBloqueadosNestedInput
  }

  export type BloqueadosUncheckedUpdateWithoutUsuarioBloqueadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
  }

  export type BloqueadosUncheckedUpdateManyWithoutUsuarioBloqueadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
  }

  export type FavoritosCreateManyCorreoInput = {
    id?: number
    usuario_id: number
  }

  export type FavoritosUpdateWithoutCorreoInput = {
    usuario?: UsuarioUpdateOneRequiredWithoutFavoritosNestedInput
  }

  export type FavoritosUncheckedUpdateWithoutCorreoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
  }

  export type FavoritosUncheckedUpdateManyWithoutCorreoInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UsuarioCountOutputTypeDefaultArgs instead
     */
    export type UsuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CorreosCountOutputTypeDefaultArgs instead
     */
    export type CorreosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CorreosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsuarioDefaultArgs instead
     */
    export type UsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CorreosDefaultArgs instead
     */
    export type CorreosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CorreosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FavoritosDefaultArgs instead
     */
    export type FavoritosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FavoritosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BloqueadosDefaultArgs instead
     */
    export type BloqueadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BloqueadosDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}